{"version":3,"file":"script.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAA4B;;AAE5B;AACA;AACA;AACA;AAC6E;AACrC;AACe;AAClB;AAWN;AA0BF;AACkC;AACF;AAI7DG,oDAAY,GAAG,IAAI,EAAC;AACpBA,qDAAa,GAAG,GAAG,EAAC;;AAEpB,IAAI6C,6BAA6B,GAAG,EAAE;AAC/B,IAAIC,0BAA0B,GAAG,IAAI;AAErC,IAAIC,kBAAkB,GAAG,CAC9B,IAAIL,sEAAkB,CAAC,CAAC,EAAE,CAAC,EAAExC,4DAAW,CAACsB,qDAAa,EAAExB,oDAAY,EAAEA,qDAAa,CAAC,CAAC,CACtF;;AAGD;AACA;AACA;AACA;;AAUyD;AAIzDiD,OAAO,CAACC,GAAG,CAACpD,oDAAS,CAAC;AAGf,IAAIqD,MAAM,GAAG,IAAI/C,8CAAM,CAAC;EAC7BN,SAASA,sDAAAA;AACX,CAAC,CAAC,CAAC,CAAC;;AAIJ;;AAKc;AACA;AACD;AACV;AACU;;AAGN,SAASsD,IAAIA,CAAA,EAAG;EACrBD,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAG,CAAC;EACrBf,6DAAuB,GAAG,CAAC;EAC3BQ,kBAAkB,GAAG,CAAC,IAAIL,sEAAkB,CAAC,CAAC,EAAE,CAAC,EAAExC,4DAAW,CAACsB,qDAAa,EAAExB,oDAAY,EAAEA,qDAAa,CAAC,CAAC,CAC5G;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAO0CmD,MAAM,GAAG,IAAI/C,8CAAM,CAAC;IAClBN,SAASA,sDAAAA;EACX,CAAC,CAAC;EAG1CA,4DAAiB,CAAC2D,QAAQ,IAAI;IAC3BA,QAAQ,CAACC,IAAI,KAAK,SAAS,IAAKD,QAAQ,CAACE,OAAO,CAAC,CAAC;EAAA,CAAC,CAAC;AAEzD;AAGA,SAASC,OAAOA,CAAA,EAAG;EACjBC,qBAAqB,CAACD,OAAO,CAAC;EAC9B;EACA3D,mDAAW,GAAI,OAAQ;EACvBA,kDAAU,CAAC,CAAC,EAAE,CAAC,EAAED,oDAAY,EAAEA,qDAAa,CAAC;EAC7CiD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAEhCH,kBAAkB,CAACS,OAAO,CAACQ,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;;EAEtD;;EAIyBnE,4DAAiB,CAAC2D,QAAQ,IAAIA,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;EAC9CnE,4DAAiB,CAAC2D,QAAQ,IAAIA,QAAQ,CAACS,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAClDpE,4DAAiB,CAAC2D,QAAQ,IAAI;IAC3BA,QAAQ,CAACC,IAAI,KAAK,YAAY,IAAKD,QAAQ,CAACU,MAAM,CAAC,CAAC;IAGvD,IAAIV,QAAQ,CAACC,IAAI,KAAK,aAAa,IACnCD,QAAQ,CAACC,IAAI,KAAK,aAAa,IAC/BD,QAAQ,CAACC,IAAI,KAAK,eAAe,CAAC;AAC5D,8IAD4D,EAEhC;MACAD,QAAQ,CAACW,SAAS,CAAC,CAAC;IACtB;EAGA,CAAC,CAAC;EAE5BvB,6BAA6B,GAAG/C,2DAAgB,CAAC2D,QAAQ,IAAI;IAC3D,OAAQA,QAAQ,CAACa,IAAI,IAAInB,MAAM,CAACmB,IAAI,IACjCb,QAAQ,CAACc,GAAG,IAAIpB,MAAM,CAACoB,GAAG,IAC3Bd,QAAQ,CAACe,MAAM,IAAIrB,MAAM,CAACqB,MAAO;EAErC,CAAC,CAAC;EACF1B,0BAA0B,GAAGD,6BAA6B,CAACA,6BAA6B,CAAC4B,MAAM,GAAG,CAAC,CAAC;EAG1EtB,MAAM,CAACe,MAAM,CAAC,CAAC;EAGvC,IAAI3B,wDAAkB,IAAKY,MAAM,CAACyB,QAAQ,CAACC,CAAC,GAAG1B,MAAM,CAACR,KAAK,IAAK3C,oDAAY,EAAE;IAAE;IAC9EmD,MAAM,CAACE,QAAQ,CAACwB,CAAC,GAAG,CAAC;EACvB,CAAC,MAAM,IAAItC,uDAAiB,IAAIY,MAAM,CAACyB,QAAQ,CAACC,CAAC,IAAI,CAAC,EAAE;IAAE;IACxD1B,MAAM,CAACE,QAAQ,CAACwB,CAAC,GAAG,CAAC,CAAC;EACxB,CAAC,MAAM;IACL1B,MAAM,CAACE,QAAQ,CAACwB,CAAC,GAAG,CAAC;EACvB;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGF,IAAI1B,MAAM,CAACE,QAAQ,CAACC,CAAC,IAAIH,MAAM,CAAC2B,UAAU,GAAG3B,MAAM,CAAC4B,OAAO,IAAI,CAACxC,wDAAkB,IAAI,CAACA,uDAAiB,IAAIA,sDAAgB,KAAK,OAAO,EAAE;IAAE;IAC1IY,MAAM,CAAC8B,aAAa,GAAG9B,MAAM,CAAC+B,OAAO,CAACC,IAAI,CAACT,KAAK;EAClD,CAAC,MAAM,IAAIvB,MAAM,CAACE,QAAQ,CAACC,CAAC,IAAIH,MAAM,CAAC2B,UAAU,GAAG3B,MAAM,CAAC4B,OAAO,IAAI,CAACxC,wDAAkB,IAAI,CAACA,uDAAiB,IAAIA,sDAAgB,KAAK,MAAM,EAAE;IAAE;IAChJY,MAAM,CAAC8B,aAAa,GAAG9B,MAAM,CAAC+B,OAAO,CAACC,IAAI,CAACb,IAAI;EACjD;;EAGI;EACE,IAAInB,MAAM,CAACyB,QAAQ,CAACtB,CAAC,GAAGtD,qDAAa,EAAE;IAC7C;IACoD;IACpDuC,2DAAqB,GAAG,CAACA,2DAAqB;IACtCa,IAAI,CAAC,CAAC;IACNH,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;;IAEvB;EACF;AAGN;;AACAE,IAAI,CAAC,CAAC;AACNQ,OAAO,CAAC,CAAC;AAETyB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE9C,oDAAc,CAAC;AAClD6C,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAE7C,kDAAY,CAAC;AAI9C4C,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;EACtCtC,OAAO,CAACC,GAAG,CAACqC,CAAC,CAACC,OAAO,EAAED,CAAC,CAACE,OAAO,CAAC;EAChC;AACH,CAAC,CAAC;;;;;;;;;;;;;;;ACnSmC;AAE9B,MAAM/C,kBAAkB,CAAC;EAC9BgD,WAAWA,CAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC9B,IAAI,CAACjB,QAAQ,GAAG;MACdC,CAAC,EAAEc,IAAI;MACPrC,CAAC,EAAEsC;IACL,CAAC;IACD,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAClD,KAAK,GAAGkD,KAAK,CAAClD,KAAK;IACxB,IAAI,CAACC,MAAM,GAAGiD,KAAK,CAACjD,MAAM;EAC5B;EACAqB,IAAIA,CAAA,EAAG;IACLhE,gDAAW,CAAC,IAAI,CAAC4F,KAAK,EAAE,IAAI,CAACjB,QAAQ,CAACC,CAAC,EAAE,IAAI,CAACD,QAAQ,CAACtB,CAAC,CAAC;IACzD;IACA;EACF;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA,MAAMxC,iBAAiB,GAAG,sCAAsC;AAChE,MAAMC,SAAS,GAAG,mCAAmC;AACrD,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,QAAQ,GAAG,iCAAiC;AAClD,MAAMC,SAAS,GAAG,mCAAmC;AACrD,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,SAAS,GAAG,mCAAmC;AACrD,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,SAAS,GAAG,qCAAqC;AACvD,MAAMC,aAAa,GAAG,0CAA0C;AAChE,MAAMC,aAAa,GAAG,4CAA4C;AAClE,MAAMC,eAAe,GAAG,8CAA8C;AACtE,MAAMC,wBAAwB,GAAG,wDAAwD;AACzF,MAAMC,YAAY,GAAG,2CAA2C;AAChE,MAAMC,oBAAoB,GAAG,oDAAoD;AACjF,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,aAAa,GAAG,4CAA4C;AAClE,MAAMC,mBAAmB,GAAG,mDAAmD;AAC/E,MAAMC,mBAAmB,GAAG,mDAAmD;AAC/E,MAAMC,qBAAqB,GAAG,qDAAqD;AACnF,MAAMC,GAAG,GAAG,6BAA6B;AACzC,MAAMC,GAAG,GAAG,6BAA6B;AACzC,MAAMC,KAAK,GAAG,yCAAyC;;AAGvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpCA,MAAMtC,MAAM,GAAG+F,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;AAChD,MAAM/F,CAAC,GAAGD,MAAM,CAACiG,UAAU,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;ACDqB;AACjB;AAUjB;AA2BF;AACkC;AAQpD,MAAMpG,cAAc,CAAC;EACnB6F,WAAWA,CAAAQ,IAAA,EAAgB;IAAA,IAAd;MAAEtB;IAAS,CAAC,GAAAsB,IAAA;IACvB,IAAI,CAACtB,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACjC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,MAAM,GAAG,EAAE;EAClB;EACAqB,IAAIA,CAAA,EAAG;IACLhE,gDAAW,GAAG,qBAAqB;IACnCA,+CAAU,CAAC,IAAI,CAAC2E,QAAQ,CAACC,CAAC,EAAE,IAAI,CAACD,QAAQ,CAACtB,CAAC,EAAE,IAAI,CAACX,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;EACvE;AACF;AAEA,MAAM9C,SAAS,GAAG,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGiD,uEAAyB,CAAC,CAACmD,GAAG,EAAEC,OAAO,KAAK;EACnED,GAAG,CAAC3C,OAAO,CAAC,CAAC6C,IAAI,EAAEC,OAAO,KAAK;IAC7B,IAAID,IAAI,KAAK,IAAI,EAAE;MAAE;MACnBpD,OAAO,CAACC,GAAG,CAACoD,OAAO,EAAEF,OAAO,CAAC;MAC7BtG,SAAS,CAACyG,IAAI,CAAC,IAAI5F,kDAAW,CAC5B2F,OAAO,GAAG,EAAE,EAAEF,OAAO,GAAG,EAAE,EAAElG,yDAAW,CAAC4B,gDAAW,EAAE,EAAE,EAAE,EAAE,CAAC,EAAEhC,SAAS,CAAC,CAAC;IAC7E;IACA,IAAIuG,IAAI,KAAK,IAAI,EAAE;MAAE;MACnBpD,OAAO,CAACC,GAAG,CAACoD,OAAO,EAAEF,OAAO,CAAC;MAC7BtG,SAAS,CAACyG,IAAI,CAAC,IAAI3F,kDAAW,CAC5B0F,OAAO,GAAG,EAAE,EAAEF,OAAO,GAAG,EAAE,EAAElG,yDAAW,CAAC6B,gDAAW,EAAE,EAAE,EAAE,EAAE,CAAC,EAAEjC,SAAS,CAAC,CAAC;IAC7E;IACA,IAAIuG,IAAI,KAAK,IAAI,EAAE;MAAE;MACnBpD,OAAO,CAACC,GAAG,CAACoD,OAAO,EAAEF,OAAO,CAAC;MAC7BtG,SAAS,CAACyG,IAAI,CAAC,IAAI1F,oDAAa,CAC9ByF,OAAO,GAAG,EAAE,EAAEF,OAAO,GAAG,EAAE,EAAElG,yDAAW,CAAC8B,kDAAa,EAAE,EAAE,EAAE,EAAE,CAAC,EAAElC,SAAS,CAAC,CAAC;IAC/E;IACA,IAAIuG,IAAI,KAAK,IAAI,EAAE;MAAE;MACnBpD,OAAO,CAACC,GAAG,CAACoD,OAAO,EAAEF,OAAO,CAAC;MAC7BtG,SAAS,CAACyG,IAAI,CAAC,IAAI/F,8CAAO,CACxB8F,OAAO,GAAG,EAAE,EAAEF,OAAO,GAAG,EAAE,EAAElG,yDAAW,CAACwB,oDAAe,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE5B,SAAS,CAAC,CAAC;IACjF;IACA,IAAIuG,IAAI,KAAK,IAAI,EAAE;MAAE;MACnBpD,OAAO,CAACC,GAAG,CAACoD,OAAO,EAAEF,OAAO,CAAC;MAC7BtG,SAAS,CAACyG,IAAI,CAAC,IAAIlG,+CAAQ;MAAE;MAC3BiG,OAAO,GAAG,EAAE,EAAEF,OAAO,GAAG,EAAE,EAAElG,yDAAW,CAACuB,kDAAa,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE3B,SAAS,CAAC,CAAC;IAC/E;IACA,IAAIuG,IAAI,KAAK,IAAI,EAAE;MAAE;MACnBpD,OAAO,CAACC,GAAG,CAACoD,OAAO,EAAEF,OAAO,CAAC;MAC7BtG,SAAS,CAACyG,IAAI,CAAC,IAAI7F,iDAAU,CAC3B4F,OAAO,GAAG,EAAE,EAAEF,OAAO,GAAG,EAAE,EAAElG,yDAAW,CAAC0B,iDAAY,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE9B,SAAS,CAAC,CAAC;IAC9E;IACA,IAAIuG,IAAI,KAAK,IAAI,EAAE;MAAE;MACnBpD,OAAO,CAACC,GAAG,CAACoD,OAAO,EAAEF,OAAO,CAAC;MAC7BtG,SAAS,CAACyG,IAAI,CAAC,IAAIjG,qDAAc,CAC/BgG,OAAO,GAAG,EAAE,EAAEF,OAAO,GAAG,EAAE,EAAElG,yDAAW,CAACoC,0CAAK,EAAE,EAAE,EAAE,EAAE,CAAC,EAAExC,SAAS,CAAC,CAAC;IACvE;IACA,IAAIuG,IAAI,KAAK,IAAI,EAAE;MAAE;MACnBpD,OAAO,CAACC,GAAG,CAACoD,OAAO,EAAEF,OAAO,CAAC;MAC7BtG,SAAS,CAACyG,IAAI,CAAC,IAAIhG,0CAAG,CACpB+F,OAAO,GAAG,EAAE,EAAEF,OAAO,GAAG,EAAE,EAAElG,yDAAW,CAACkC,wCAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAEtC,SAAS,CAAC,CAAC;IACrE;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;;;;;;;;;;;;;;;ACnHK,SAASI,WAAWA,CAACsG,GAAG,EAAE7D,KAAK,EAAEC,MAAM,EAAE;EAC9C,MAAMiD,KAAK,GAAG,IAAIY,KAAK,CAAC,CAAC;EACzBZ,KAAK,CAACW,GAAG,GAAGA,GAAG;EACfX,KAAK,CAAClD,KAAK,GAAGA,KAAK;EACnBkD,KAAK,CAACjD,MAAM,GAAGA,MAAM;EACrB,OAAOiD,KAAK;AACd;AAGO,MAAM1F,MAAM,CAAC;EAClBuF,WAAWA,CAAAQ,IAAA,EAA0B;IAAA,IAAxB;MAAEtB,QAAQ;MAAE8B;IAAS,CAAC,GAAAR,IAAA;IACjC,IAAI,CAACtB,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACiB,KAAK,GAAG,IAAIY,KAAK,CAAC,CAAC;IACxB,IAAI,CAACZ,KAAK,CAACc,MAAM,GAAG,MAAM;MACxB,IAAI,CAACC,MAAM,GAAG,IAAI;IACpB,CAAC;IACD,IAAI,CAACf,KAAK,CAACW,GAAG,GAAGE,QAAQ;IACzB,IAAI,CAACE,MAAM,GAAG,KAAK;EACrB;EACA3C,IAAIA,CAAA,EAAG;IACL,IAAI,CAAC,IAAI,CAAC2C,MAAM,EAAE;IAClB3G,CAAC,CAAC6F,SAAS,CAAC,IAAI,CAACD,KAAK,EAAE,IAAI,CAACjB,QAAQ,CAACC,CAAC,EAAE,IAAI,CAACD,QAAQ,CAACtB,CAAC,CAAC;EAC3D;AACF;;;;;;;;;;;;;;;;;ACvBkC;AACG;AACQ;AACb;AAIhC,MAAMf,IAAI,GAAG;EACXmC,KAAK,EAAE;IACLC,OAAO,EAAE;EACX,CAAC;EACDL,IAAI,EAAE;IACJK,OAAO,EAAE;EACX,CAAC;EACDqC,EAAE,EAAE;IACFrC,OAAO,EAAE;EACX,CAAC;EACDK,WAAW,EAAE,OAAO;EACpBI,gBAAgB,EAAE,IAAI;EACtB7B,kBAAkB,EAAE,CAAC;EAAE;EACvB0D,cAAc,EAAE;AAClB,CAAC;AAC+C;AAChD,MAAMzE,cAAc,GAAI+C,CAAC,IAAK;EAC5BtC,OAAO,CAACC,GAAG,CAACqC,CAAC,CAAC2B,IAAI,CAAC;EACnB,IAAI3B,CAAC,CAAC4B,MAAM,IAAI,KAAK,EAAE;IACrB,QAAQ5B,CAAC,CAAC2B,IAAI;MACZ,KAAK,SAAS;QACZ,IAAI/D,qDAAiB,KAAK,CAAC,EAAE;UAC3BZ,IAAI,CAAC6C,gBAAgB,GAAG7C,IAAI,CAAC6C,gBAAgB,GAAG,KAAK,GAAG7C,IAAI,CAAC6C,gBAAgB,GAAG,IAAI;QACtF;QACA7C,IAAI,CAACyE,EAAE,CAACrC,OAAO,GAAG,IAAI;QACtB,IAAIxB,qDAAiB,KAAK,CAAC,IAAIZ,IAAI,CAACyC,WAAW,KAAK,OAAO,EAAE;UAAE;UAC7D7B,qDAAiB,IAAIA,qDAAiB,CAAC,CAAC;UACxCA,wDAAoB,GAAGA,6DAAyB;QAClD,CAAC,MAAM,IAAIA,qDAAiB,KAAK,CAAC,IAAIZ,IAAI,CAACyC,WAAW,KAAK,MAAM,EAAE;UAAE;UACnE7B,qDAAiB,IAAIA,qDAAiB,CAAC,CAAC;UACxCA,wDAAoB,GAAGA,4DAAwB;QACjD;QACA;MAEF,KAAK,OAAO;QAAE;UACZ,CAACZ,IAAI,CAAC0E,cAAc,IAAI1E,IAAI,CAACgB,kBAAkB,EAAE;QACnD;QACE;MAEF,KAAK,YAAY;QAAE;UACjBhB,IAAI,CAACmC,KAAK,CAACC,OAAO,GAAG,IAAI;UACzBpC,IAAI,CAACyC,WAAW,GAAG,OAAO;UAC1B7B,wDAAoB,GAAGA,4DAAwB;QACjD;QACE;MACF,KAAK,WAAW;QAAE;UAChBZ,IAAI,CAAC+B,IAAI,CAACK,OAAO,GAAG,IAAI;UACxBpC,IAAI,CAACyC,WAAW,GAAG,MAAM;UACzB7B,wDAAoB,GAAGA,2DAAuB;QAChD;QACE;IACJ;EACF;AACF,CAAC;AAED,MAAMV,YAAY,GAAI8C,CAAC,IAAK;EAC1B,IAAIA,CAAC,CAAC4B,MAAM,IAAI,KAAK,EAAE;IACrB,QAAQ5B,CAAC,CAAC2B,IAAI;MACZ,KAAK,SAAS;QACZ;QACA3E,IAAI,CAACyE,EAAE,CAACrC,OAAO,GAAG,KAAK;QACvB;QACA,IAAIxB,qDAAiB,KAAK,CAAC,IAAIZ,IAAI,CAACyC,WAAW,KAAK,OAAO,EAAE;UAC3D7B,wDAAoB,GAAGA,6DAAyB;QAClD,CAAC,MAAM,IAAIA,qDAAiB,KAAK,CAAC,IAAIZ,IAAI,CAACyC,WAAW,KAAK,MAAM,EAAE;UACjE7B,wDAAoB,GAAGA,4DAAwB;QACjD;QACA;MACF;MACA;MACA,KAAK,YAAY;QAAE;UACjBZ,IAAI,CAACmC,KAAK,CAACC,OAAO,GAAG,KAAK;UAC1BxB,wDAAoB,GAAGA,6DAAyB;QAClD;QACE;MACF,KAAK,WAAW;QAAE;UAChBZ,IAAI,CAAC+B,IAAI,CAACK,OAAO,GAAG,KAAK;UACzBxB,wDAAoB,GAAGA,4DAAwB;QACjD;QACE;IACJ;EACF;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFyE;AACrC;AACO;AA0BpB;AAMM;AACI;AACoB;AACtD,MAAM9C,QAAQ,CAAC;EACbqF,WAAWA,CAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC9B,IAAI,CAACjB,QAAQ,GAAG;MACdC,CAAC,EAAEc,IAAI;MACPrC,CAAC,EAAEsC;IACL,CAAC;IACD,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAClD,KAAK,GAAGkD,KAAK,CAAClD,KAAK;IACxB,IAAI,CAACC,MAAM,GAAGiD,KAAK,CAACjD,MAAM;IAC1B,IAAI,CAAC0E,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACrC,OAAO,GAAG;MACbC,IAAI,EAAE,IAAI,CAACU;IACb,CAAC;IACD,IAAI,CAACZ,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI;IACtC,IAAI,CAACzB,IAAI,GAAG,OAAO;IACnB,IAAI,CAAC8D,YAAY,GAAG,IAAI;EAC1B;EAEA,IAAIjD,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACK,QAAQ,CAACtB,CAAC;EACxB;EACA,IAAIkB,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACI,QAAQ,CAACtB,CAAC,GAAG,IAAI,CAACV,MAAM;EACtC;EACA,IAAI0B,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACM,QAAQ,CAACC,CAAC;EACxB;EACA,IAAIH,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACE,QAAQ,CAACC,CAAC,GAAG,IAAI,CAAClC,KAAK;EACrC;EAEA,IAAI4B,GAAGA,CAACkD,KAAK,EAAE;IACb,IAAI,CAAC7C,QAAQ,CAACtB,CAAC,GAAGmE,KAAK;EACzB;EACA,IAAIjD,MAAMA,CAACiD,KAAK,EAAE;IAChB,IAAI,CAAC7C,QAAQ,CAACtB,CAAC,GAAGmE,KAAK;EACzB;EACA,IAAInD,IAAIA,CAACmD,KAAK,EAAE;IACd,IAAI,CAAC7C,QAAQ,CAACC,CAAC,GAAG4C,KAAK;EACzB;EACA,IAAI/C,KAAKA,CAAC+C,KAAK,EAAE;IACf,IAAI,CAAC7C,QAAQ,CAACC,CAAC,GAAG4C,KAAK;EACzB;EAEAC,OAAOA,CAAA,EAAG;IACR,OAAO,IAAI,CAAChE,IAAI;EAClB;EACAO,IAAIA,CAAA,EAAG;IACLhE,gDAAW,CAAC,IAAI,CAACgF,aAAa,EAAE,EAAE,GAAG,IAAI,CAACqC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC1C,QAAQ,CAACC,CAAC,EAAE,IAAI,CAACD,QAAQ,CAACtB,CAAC,EAAE,IAAI,CAACX,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC,EAAC;EAC1H;;EACAsB,MAAMA,CAAA,EAAG;IACP,IAAI,CAACoD,MAAM,EAAE;IACb,IAAI,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE,IAAI,CAACD,MAAM,GAAG,CAAC;IACjD,IAAI,CAACrD,IAAI,CAAC,CAAC;EACb;EACA0D,cAAcA,CAAA,EAAG;IACjB;IACE,IAAIxE,qDAAiB,GAAGA,iDAAa,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,IACtDH,qDAAiB,GAAGA,iDAAa,GAAGA,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC;IAAI;IAC5E;IACAH,qDAAiB,GAAGA,gDAAY,GAAGA,gDAAY,GAAG,CAAC,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC;IAAK;IAC3E1B,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,GAAG,IAAI,CAAClC,KAAK,GAAGQ,gDAAY,GAAG,CAAC,EAAE;MACtEA,qDAAiB,GAAG,CAAC,GAAG,CAAC,CAAC;;MAE1B,IAAIZ,kDAAe,IACnBA,kDAAe,IAAIA,qDAAkB,IACrCA,kDAAe,IAAIA,oDAAiB,EAAE;QACpCY,qDAAiB,GAAG,CAACA,qDAAiB;QACtCA,kDAAc,GAAG,IAAI;MACvB;IACF;EACF;EACAyE,cAAcA,CAAA,EAAG;IACjB;IACE,IAAIzE,qDAAiB,GAAGA,qDAAiB,GAAG,GAAG,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,GAAG,IAAI,CAACV,MAAM,IAC9EO,qDAAiB,GAAGA,iDAAa,GAAGA,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,IACxEH,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,GAAG1B,gDAAY,GAAG,IAAI;IAAI;IAC9DA,qDAAiB,GAAGA,gDAAY,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,GAAG,IAAI,CAAClC,KAAK,GAAGQ,gDAAY,GAAG,IAAI,EAAE;MACtFA,qDAAiB,GAAG,CAAC,CAAC;IACxB;EACJ;;EACA0E,iBAAiBA,CAAA,EAAG;IACpB;IACE,IAAItF,qDAAkB,IACpBY,qDAAiB,GAAGA,iDAAa,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,IACpDH,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,GAAG,IAAI,CAACV,MAAM,IAClDO,qDAAiB,GAAGA,gDAAY,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,EAAE;MACnD1B,qDAAiB,GAAG,CAAC;MACrBF,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACvB,CAAC,CAAC;IACF,IAAIX,qDAAkB,IACpBY,qDAAiB,GAAGA,iDAAa,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,IACpDH,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,GAAG,IAAI,CAACV,MAAM,IAClDO,qDAAiB,GAAGA,gDAAY,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,GAAG,IAAI,CAAClC,KAAK,EAAE;MAChEQ,qDAAiB,GAAG,CAAC;MACrBF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACxB;EACF;EACA4E,kBAAkBA,CAAA,EAAG;IACrB;IACE,IAAIvF,oDAAiB,KAClBO,8DAA0B,IAAIiF,SAAS,IAAIjF,8DAA0B,IAAI,IAAI,CAAC,IAC/EK,qDAAiB,GAAGA,iDAAa,IAAIL,yEAAqC,IAC1EK,qDAAiB,IAAIL,yEAAqC,GAAGA,qEAAiC,IAC9FK,qDAAiB,IAAIL,yEAAqC,GAAGA,oEAAgC,EAAE;MAC7FK,qDAAiB,GAAG,CAAC;MACrBF,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACvB,CAAC,CAAC;IACA,IAAIX,oDAAiB,IACnBO,8DAA0B,IAAIiF,SAAS,KACtC5E,qDAAiB,GAAGA,iDAAa,IAAIL,yEAAqC,IAC3EK,qDAAiB,IAAIL,yEAAqC,GAAGA,qEAAiC,CAAC,IAC/FK,qDAAiB,IAAIL,yEAAqC,EAAE;MAAE;MAC5DK,qDAAiB,GAAG,CAAC,CAAC;MACtBF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACxB;EACF;EAEFkB,SAASA,CAAA,EAAG;IAAE;IACZ,IAAI,CAACuD,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B;AACF;AAEE,MAAMxH,cAAc,SAASD,QAAQ,CAAC;EACtCqF,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACnC,IAAI,GAAG,QAAQ;EACtB;EACAU,SAASA,CAAA,EAAG;IACZ;IACE,IAAIjB,qDAAiB,GAAGA,iDAAa,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,IACtDH,qDAAiB,GAAGA,iDAAa,GAAGA,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC;IAAI;IAC5E;IACAH,qDAAiB,GAAGA,gDAAY,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,GAAG1B,gDAAY,GAAG,CAAC;IAAI;IAC1EA,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,GAAG,IAAI,CAAClC,KAAK,GAAGQ,gDAAY,GAAG,CAAC,EAAE;MACtEA,8CAAU,CAAC,CAAC;IACd;IACA;IACA,IAAIA,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,GAAG,IAAI,CAACV,MAAM,IACpDO,qDAAiB,GAAGA,iDAAa,GAAGA,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACtB,CAAC,IACxEH,qDAAiB,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,GAAG1B,gDAAY,GAAG,CAAC;IAAI;IAC3DA,qDAAiB,GAAGA,gDAAY,IAAI,IAAI,CAACyB,QAAQ,CAACC,CAAC,GAAG,IAAI,CAAClC,KAAK,GAAGQ,gDAAY,GAAG,CAAC,EAAE;MACnFA,8CAAU,CAAC,CAAC;IAChB;EACF;AACF;AAEA,MAAM5C,GAAG,SAASD,cAAc,CAAC;EAC/BoF,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACnC,IAAI,GAAG,KAAK;IACjB,IAAI,CAAC6D,SAAS,GAAG,EAAE;EACrB;AACF;AAEA,MAAM9G,GAAG,SAASJ,QAAQ,CAAC;EACzBqF,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACnC,IAAI,GAAG,KAAK;IACjB,IAAI,CAACwB,OAAO,GAAG;MACbC,IAAI,EAAEjF,yDAAW,CAACmC,wCAAG,EAAE,EAAE,EAAE,EAAE;IAC/B,CAAC;IACD,IAAI,CAAC4C,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI;IACtC,IAAI,CAACoC,SAAS,GAAG,EAAE;EACrB;AACF;AAEA,MAAM7G,UAAU,SAASL,QAAQ,CAAC;EAChCqF,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACnC,IAAI,GAAG,YAAY;IACxB,IAAI,CAACwB,OAAO,GAAG;MACbC,IAAI,EAAEjF,yDAAW,CAAC0B,iDAAY,EAAE,EAAE,EAAE,EAAE,CAAC;MACvCqG,QAAQ,EAAE/H,yDAAW,CAAC2B,yDAAoB,EAAE,EAAE,EAAE,EAAE;IACpD,CAAC;IACD,IAAI,CAACoD,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI;IACtC,IAAI,CAACoC,SAAS,GAAG,EAAE;EACrB;EACApD,MAAMA,CAAA,EAAG;IACP5B,wDAAqB,KAAK,IAAI,GAAG,IAAI,CAAC0C,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI,GAAG,IAAI,CAACF,aAAa,GAAG,IAAI,CAACC,OAAO,CAAC+C,QAAQ;EACtH;EACA7D,SAASA,CAAA,EAAG;IACV,IAAI7B,wDAAqB,EAAE;MACzB,KAAK,CAAC6B,SAAS,CAAC,CAAC;IACnB;EACF;AACF;AAEA,MAAM5D,OAAO,SAASH,QAAQ,CAAC;EAC7BqF,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACqC,aAAa,GAAGvC,IAAI;IACzB,IAAI,CAACwC,IAAI,GAAG,CAAC;IACb,IAAI,CAACjD,OAAO,GAAG;MACbC,IAAI,EAAEjF,yDAAW,CAACwB,oDAAe,EAAE,EAAE,EAAE,EAAE,CAAC;MAC1C0G,SAAS,EAAElI,yDAAW,CAACyB,6DAAwB,EAAE,EAAE,EAAE,EAAE;IACzD,CAAC;IACD,IAAI,CAACsD,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI;IACtC,IAAI,CAACoC,SAAS,GAAG,EAAE;IACnB,IAAI,CAAC7D,IAAI,GAAG,SAAS;EACvB;EACA2E,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpD,aAAa,GAAG,IAAI,CAACC,OAAO,CAACkD,SAAS;IAC3CE,UAAU,CAAC,MAAM;MACf,IAAI,CAAC1D,QAAQ,CAACC,CAAC,GAAG,CAAC,IAAI;MACvB,IAAI,CAACI,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI;IAC1C,CAAC,EAAE,GAAG,CAAC;IACL,IAAI,CAACgD,IAAI,GAAG,CAAC;EACf;EACAxE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACiB,QAAQ,CAACC,CAAC,GAAG,IAAI,CAACqD,aAAa;EACtC;AACF;AAEA,MAAMK,oBAAoB,SAASlI,QAAQ,CAAC;EAC1CqF,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACnC,IAAI,GAAG,wBAAwB;IACpC,IAAI,CAACwB,OAAO,GAAG;MACbC,IAAI,EAAEjF,yDAAW,CAAC4B,gDAAW,EAAE,EAAE,EAAE,EAAE,CAAC;MACtCmG,QAAQ,EAAE/H,yDAAW,CAAC+B,wDAAmB,EAAE,EAAE,EAAE,EAAE;IACnD,CAAC;IACD,IAAI,CAACgD,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI;IACtC,IAAI,CAACoC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACiB,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EACAC,uBAAuBA,CAAA,EAAG;IACzBnG,0DAAuB,IAAI,CAAC,GAAGA,0DAAuB,GAAI,CAAC,GAAGA,0DAAuB;EACtF;EACA6B,SAASA,CAAA,EAAG;IACV,IAAI7B,0DAAuB,KAAK,IAAI,CAACiG,QAAQ,EAAE;MAC7C,KAAK,CAACb,cAAc,CAAC,CAAC;MACtB,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB,KAAK,CAACC,iBAAiB,CAAC,CAAC;MACzB,IAAI,CAAC/E,8DAA0B,IAAIiF,SAAS,IAC1CjF,8DAA0B,IAAI,IAAI,KAClCP,0DAAuB,KAAKO,uEAAmC,EAAE;QAC/D,KAAK,CAACgF,kBAAkB,CAAC,CAAC;MAC9B;MAEA,IAAI,CAAC7C,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI;MACtC,IAAI,CAACuD,uBAAuB,CAAC,CAAC;IAChC,CAAC,MAAM;MACL,IAAI,CAACzD,aAAa,GAAG,IAAI,CAACC,OAAO,CAAC+C,QAAQ;MAC1C,IAAI,CAACS,uBAAuB,CAAC,CAAC;MAChC;MACA,IAAI5I,sDAAc,CAAE8I,IAAI,IAAK;QAC3B,OAAQzF,qDAAiB,GAAGA,iDAAa,GAAG,IAAI,IAAIyF,IAAI,CAAChE,QAAQ,CAACtB,CAAC,IACjEH,qDAAiB,GAAGA,iDAAa,GAAG,IAAI,IAAIyF,IAAI,CAAChE,QAAQ,CAACtB,CAAC,GAAGsF,IAAI,CAAChG,MAAM,IACzEO,qDAAiB,GAAGA,gDAAY,GAAG,IAAI,IAAIyF,IAAI,CAAChE,QAAQ,CAACC,CAAC,IAC1D1B,qDAAiB,GAAGA,gDAAY,GAAG,IAAI,IAAIyF,IAAI,CAAChE,QAAQ,CAACC,CAAC,GAAG+D,IAAI,CAACjG,KAAK;MAC3E,CAAC,CAAC,EAAE;QACFJ,sDAAmB,GAAG,IAAI;QAC1BU,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACvB,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACtBX,sDAAmB,GAAG,KAAK;MAC7B;IACA;EACF;AACF;AAEA,MAAM5B,WAAW,SAAS4H,oBAAoB,CAAC;EAC7C7C,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACnC,IAAI,GAAG,aAAa;IACzB,IAAI,CAAC8E,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACtD,OAAO,GAAG;MACbC,IAAI,EAAEjF,yDAAW,CAAC4B,gDAAW,EAAE,EAAE,EAAE,EAAE,CAAC;MACtCmG,QAAQ,EAAE/H,yDAAW,CAAC+B,wDAAmB,EAAE,EAAE,EAAE,EAAE;IACnD,CAAC;EACH;AACF;AAEA,MAAMrB,WAAW,SAAS2H,oBAAoB,CAAC;EAC7C7C,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACnC,IAAI,GAAG,aAAa;IACzB,IAAI,CAAC8E,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACtD,OAAO,GAAG;MACbC,IAAI,EAAEjF,yDAAW,CAAC6B,gDAAW,EAAE,EAAE,EAAE,EAAE,CAAC;MACtCkG,QAAQ,EAAE/H,yDAAW,CAACgC,wDAAmB,EAAE,EAAE,EAAE,EAAE;IACnD,CAAC;EACH;AACF;AAEA,MAAMrB,aAAa,SAAS0H,oBAAoB,CAAC;EAC/C7C,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACxB,IAAI,CAACnC,IAAI,GAAG,eAAe;IAC3B,IAAI,CAAC8E,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACtD,OAAO,GAAG;MACbC,IAAI,EAAEjF,yDAAW,CAAC8B,kDAAa,EAAE,EAAE,EAAE,EAAE,CAAC;MACxCiG,QAAQ,EAAE/H,yDAAW,CAACiC,0DAAqB,EAAE,EAAE,EAAE,EAAE;IACrD,CAAC;EACH;AACF;;;;;;;;;;;;;;;;;;;;AClVqC;AACO;AACZ;AACF;AA0BF;AACuB;AAG5C,MAAM/B,MAAM,CAAC;EAClBsF,WAAWA,CAAAQ,IAAA,EAAqB;IAAA,IAApB;MAAEpG,SAAS,GAAG;IAAG,CAAC,GAAAoG,IAAA;IAC5B,IAAI,CAACpG,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAAC8E,QAAQ,GAAG;MACdC,CAAC,EAAE,GAAG;MACNvB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;;IACD,IAAI,CAACD,QAAQ,GAAG;MACdwB,CAAC,EAAE,CAAC;MACJvB,CAAC,EAAE;IACL,CAAC;IACD,IAAI,CAACyB,OAAO,GAAG,IAAI;IACnB,IAAI,CAACD,UAAU,GAAG,EAAE,CAAC,CAAC;IACtB,IAAI,CAACnC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAAC2E,SAAS,GAAG,EAAE;IACnB,IAAI,CAACD,MAAM,GAAG,CAAC;IACf,IAAI,CAACpC,OAAO,GAAG;MACbC,IAAI,EAAE;QACJT,KAAK,EAAExE,yDAAW,CAACa,iDAAS,EAAE,EAAE,EAAE,EAAE,CAAC;QACrCuD,IAAI,EAAEpE,yDAAW,CAACc,iDAAS,EAAE,EAAE,EAAE,EAAE;MACrC,CAAC;MACDoG,GAAG,EAAE;QACH1C,KAAK,EAAExE,yDAAW,CAACe,gDAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;QACpCqD,IAAI,EAAEpE,yDAAW,CAACgB,gDAAQ,EAAE,EAAE,EAAE,EAAE;MACpC,CAAC;MACD6F,IAAI,EAAE;QACJrC,KAAK,EAAExE,yDAAW,CAACiB,iDAAS,EAAE,EAAE,EAAE,EAAE,CAAC;QACrCmD,IAAI,EAAEpE,yDAAW,CAACkB,iDAAS,EAAE,EAAE,EAAE,EAAE;MACrC,CAAC;MACDiG,IAAI,EAAE;QACJ3C,KAAK,EAAExE,yDAAW,CAACmB,iDAAS,EAAE,EAAE,EAAE,EAAE,CAAC;QACrCiD,IAAI,EAAEpE,yDAAW,CAACoB,iDAAS,EAAE,EAAE,EAAE,EAAE;MACrC,CAAC;MACDwH,KAAK,EAAE5I,yDAAW,CAACqB,iDAAS,EAAE,EAAE,EAAE,EAAE;IACtC,CAAC;IACD,IAAI,CAAC0D,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI,CAACT,KAAK;EAC9C;EAEA,IAAIH,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACK,QAAQ,CAACtB,CAAC;EACxB;EACA,IAAIkB,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACI,QAAQ,CAACtB,CAAC,GAAG,IAAI,CAACV,MAAM;EACtC;EACA,IAAI0B,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACM,QAAQ,CAACC,CAAC;EACxB;EACA,IAAIH,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACE,QAAQ,CAACC,CAAC,GAAG,IAAI,CAAClC,KAAK;EACrC;EAEA,IAAI4B,GAAGA,CAACkD,KAAK,EAAE;IACb,IAAI,CAAC7C,QAAQ,CAACtB,CAAC,GAAGmE,KAAK;EACzB;EACA,IAAIjD,MAAMA,CAACiD,KAAK,EAAE;IAChB,IAAI,CAAC7C,QAAQ,CAACtB,CAAC,GAAGmE,KAAK;EACzB;EACA,IAAInD,IAAIA,CAACmD,KAAK,EAAE;IACd,IAAI,CAAC7C,QAAQ,CAACC,CAAC,GAAG4C,KAAK;EACzB;EACA,IAAI/C,KAAKA,CAAC+C,KAAK,EAAE;IACf,IAAI,CAAC7C,QAAQ,CAACC,CAAC,GAAG4C,KAAK;EACzB;EAEAxD,IAAIA,CAAA,EAAG;IACLhE,gDAAW,CAAC,IAAI,CAACgF,aAAa,EAAE,EAAE,GAAG,IAAI,CAACqC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAChD,IAAI,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAAC5B,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC,EAAC;EAC7G;;EAEAoF,GAAGA,CAAA,EAAG;IACJ,IAAI,CAAC3E,QAAQ,CAACwB,CAAC,GAAG,CAAC;IACnB,IAAI,CAACxB,QAAQ,CAACC,CAAC,GAAG,CAAC,CAAC;IACpB,IAAI,CAACyB,OAAO,GAAG,CAAC;IAChB,IAAI,CAACE,aAAa,GAAG,IAAI,CAACC,OAAO,CAAC4D,KAAK;IACvCR,UAAU,CAAClF,wCAAI,EAAE,GAAG,CAAC;EACvB;EAEA2F,qBAAqBA,CAAA,EAAG;IACtB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClJ,SAAS,CAAC2E,MAAM,EAAEuE,CAAC,EAAE,EAAE;MAC9C,MAAMvF,QAAQ,GAAG,IAAI,CAAC3D,SAAS,CAACkJ,CAAC,CAAC;MAClC;MACA,QAAOvF,QAAQ,CAACC,IAAI;QAClB,KAAK,KAAK;QACV,KAAK,OAAO;UACV,IAAI,IAAI,CAACY,IAAI,IAAIb,QAAQ,CAACiB,KAAK,IAC7B,IAAI,CAACA,KAAK,IAAIjB,QAAQ,CAACa,IAAI,IAC3B,IAAI,CAACC,GAAG,IAAId,QAAQ,CAACe,MAAM,IAC3B,IAAI,CAACA,MAAM,IAAIf,QAAQ,CAACc,GAAG,EAAE;YAC3B,IAAI,IAAI,CAAClB,QAAQ,CAACwB,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACP,IAAI,GAAGb,QAAQ,CAACiB,KAAK,GAAG,GAAG;cAChC;YACF;YACA,IAAI,IAAI,CAACrB,QAAQ,CAACwB,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACP,IAAI,GAAGb,QAAQ,CAACa,IAAI,GAAG,IAAI,CAAC3B,KAAK,GAAG,GAAG;cAC5C;YACF;UACJ;UACA;QAEF,KAAK,YAAY;UACf,IAAIJ,wDAAqB,IACvB,IAAI,CAAC+B,IAAI,IAAIb,QAAQ,CAACiB,KAAK,IAC3B,IAAI,CAACA,KAAK,IAAIjB,QAAQ,CAACa,IAAI,IAC3B,IAAI,CAACC,GAAG,IAAId,QAAQ,CAACe,MAAM,IAC3B,IAAI,CAACA,MAAM,IAAIf,QAAQ,CAACc,GAAG,EAAE;YAC3B,IAAI,IAAI,CAAClB,QAAQ,CAACwB,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACP,IAAI,GAAGb,QAAQ,CAACiB,KAAK,GAAG,GAAG;cAChC;YACF;YACA,IAAI,IAAI,CAACrB,QAAQ,CAACwB,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACP,IAAI,GAAGb,QAAQ,CAACa,IAAI,GAAG,IAAI,CAAC3B,KAAK,GAAG,GAAG;cAC5C;YACF;UACF;UACA;QAEJ,KAAK,QAAQ;QACb,KAAK,KAAK;UACR;UACA,IAAI,IAAI,CAAC6B,MAAM,IAAIf,QAAQ,CAACc,GAAG,GAAG,IAAI,CAAC3B,MAAM,GAAG,CAAC,IAC/C,IAAI,CAAC4B,MAAM,GAAG,IAAI,CAACnB,QAAQ,CAACC,CAAC,IAAIG,QAAQ,CAACc,GAAG,GAAG,IAAI,CAAC3B,MAAM,GAAG,CAAC,IAC/D,IAAI,CAAC8B,KAAK,IAAIjB,QAAQ,CAACa,IAAI,GAAG,IAAI,CAAC3B,KAAK,GAAG,CAAC,IAC5C,IAAI,CAAC2B,IAAI,IAAIb,QAAQ,CAACiB,KAAK,GAAG,IAAI,CAAC/B,KAAK,GAAG,CAAC,EAC1C;YACA;YACA,IAAI,CAACqF,GAAG,CAAC,CAAC;UACd;UACA;UACA,IAAI,IAAI,CAACzD,GAAG,IAAId,QAAQ,CAACe,MAAM,GAAGyE,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC7F,QAAQ,CAACC,CAAC,CAAC,IACzD,IAAI,CAACkB,MAAM,GAAG,IAAI,CAACnB,QAAQ,CAACC,CAAC,IAAIG,QAAQ,CAACc,GAAG,GAAG,IAAI,CAAC3B,MAAM,GAAG,CAAC;UAAI;UACnE,IAAI,CAAC0B,IAAI,IAAIb,QAAQ,CAACa,IAAI,GAAG,IAAI,CAAC3B,KAAK,GAAG,GAAG,IAC7C,IAAI,CAAC+B,KAAK,IAAIjB,QAAQ,CAACiB,KAAK,GAAG,IAAI,CAAC/B,KAAK,GAAG,GAAG,EAAE;YAC/C;YACA,IAAI,CAACqF,GAAG,CAAC,CAAC;UACd;UACA;QAEF,KAAK,SAAS;UACZ,IAAIvE,QAAQ,CAAC0E,IAAI,KAAK,CAAC,IACrB,IAAI,CAAC7D,IAAI,IAAIb,QAAQ,CAACiB,KAAK,IAC3B,IAAI,CAACA,KAAK,IAAIjB,QAAQ,CAACa,IAAI,IAC3B,IAAI,CAACC,GAAG,IAAId,QAAQ,CAACe,MAAM,IAC3B,IAAI,CAACA,MAAM,IAAIf,QAAQ,CAACc,GAAG,EAAE;YAC3B,IAAI,IAAI,CAAClB,QAAQ,CAACwB,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACP,IAAI,GAAGb,QAAQ,CAACiB,KAAK,GAAG,GAAG;cAChCnC,oDAAiB,GAAG,KAAK;cACzBkB,QAAQ,CAAC0E,IAAI,EAAE;cACf1E,QAAQ,CAAC4E,OAAO,CAAC,CAAC;cAClB;YACF;YACA,IAAI,IAAI,CAAChF,QAAQ,CAACwB,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACP,IAAI,GAAGb,QAAQ,CAACa,IAAI,GAAG,IAAI,CAAC3B,KAAK,GAAG,GAAG;cAC5CJ,qDAAkB,GAAG,KAAK;cAC1BkB,QAAQ,CAAC0E,IAAI,EAAE;cACf1E,QAAQ,CAAC4E,OAAO,CAAC,CAAC;cAClB;YACF;UACJ;UACA;MACJ;IACF;EACF;EAEAc,qBAAqBA,CAAA,EAAG;IACtB;IACA,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClJ,SAAS,CAAC2E,MAAM,EAAEuE,CAAC,EAAE,EAAE;MAC9C,MAAMvF,QAAQ,GAAG,IAAI,CAAC3D,SAAS,CAACkJ,CAAC,CAAC;MAClC;MACA,QAAOvF,QAAQ,CAACC,IAAI;QAClB,KAAK,KAAK;QACV,KAAK,OAAO;UACV,IAAI,IAAI,CAACY,IAAI,IAAIb,QAAQ,CAACiB,KAAK,IAC7B,IAAI,CAACA,KAAK,IAAIjB,QAAQ,CAACa,IAAI,IAC3B,IAAI,CAACC,GAAG,IAAId,QAAQ,CAACe,MAAM,IAC3B,IAAI,CAACA,MAAM,IAAIf,QAAQ,CAACc,GAAG,EAAE;YAC3B,IAAI,IAAI,CAAClB,QAAQ,CAACC,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACD,QAAQ,CAACC,CAAC,GAAG,CAAC;cACnB,IAAI,CAACiB,GAAG,GAAGd,QAAQ,CAACe,MAAM,GAAG,GAAG;cAChC;YACF;YACA,IAAI,IAAI,CAACnB,QAAQ,CAACC,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACD,QAAQ,CAACC,CAAC,GAAG,CAAC;cACnB,IAAI,CAACiB,GAAG,GAAGd,QAAQ,CAACc,GAAG,GAAG,IAAI,CAAC3B,MAAM,GAAG,GAAG;cAC3C;YACF;UACJ;UACA;QAEF,KAAK,YAAY;UACf,IAAIL,wDAAqB,IACvB,IAAI,CAAC+B,IAAI,IAAIb,QAAQ,CAACiB,KAAK,IAC3B,IAAI,CAACA,KAAK,IAAIjB,QAAQ,CAACa,IAAI,IAC3B,IAAI,CAACC,GAAG,IAAId,QAAQ,CAACe,MAAM,IAC3B,IAAI,CAACA,MAAM,IAAIf,QAAQ,CAACc,GAAG,EAAE;YAC3B,IAAI,IAAI,CAAClB,QAAQ,CAACC,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACD,QAAQ,CAACC,CAAC,GAAG,CAAC;cACnB,IAAI,CAACiB,GAAG,GAAGd,QAAQ,CAACe,MAAM,GAAG,GAAG;cAChC;YACF;YACA,IAAI,IAAI,CAACnB,QAAQ,CAACC,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACD,QAAQ,CAACC,CAAC,GAAG,CAAC;cACnB,IAAI,CAACiB,GAAG,GAAGd,QAAQ,CAACc,GAAG,GAAG,IAAI,CAAC3B,MAAM,GAAG,GAAG;cAC3C;YACF;UACJ;UACA;QAEF,KAAK,SAAS;UACZ,IAAIa,QAAQ,CAAC0E,IAAI,KAAK,CAAC,IACrB,IAAI,CAAC7D,IAAI,IAAIb,QAAQ,CAACiB,KAAK,IAC3B,IAAI,CAACA,KAAK,IAAIjB,QAAQ,CAACa,IAAI,IAC3B,IAAI,CAACC,GAAG,IAAId,QAAQ,CAACe,MAAM,IAC3B,IAAI,CAACA,MAAM,IAAIf,QAAQ,CAACc,GAAG,EAAE;YAC3B,IAAI,IAAI,CAAClB,QAAQ,CAACC,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACD,QAAQ,CAACC,CAAC,GAAG,CAAC;cACnB,IAAI,CAACiB,GAAG,GAAGd,QAAQ,CAACe,MAAM,GAAG,GAAG;cAChCjC,kDAAe,GAAG,KAAK;cACvBkB,QAAQ,CAAC0E,IAAI,EAAE;cACf1E,QAAQ,CAAC4E,OAAO,CAAC,CAAC;cAClB;YACF;YACA,IAAI,IAAI,CAAChF,QAAQ,CAACC,CAAC,GAAG,CAAC,EAAE;cAAC;cACxB,IAAI,CAACD,QAAQ,CAACC,CAAC,GAAG,CAAC;cACnBf,kDAAe,GAAG,KAAK;cACvBkB,QAAQ,CAAC0E,IAAI,EAAE;cACf1E,QAAQ,CAAC4E,OAAO,CAAC,CAAC;cAClB,IAAI,CAAC9D,GAAG,GAAGd,QAAQ,CAACc,GAAG,GAAG,IAAI,CAAC3B,MAAM,GAAG,GAAG;cAC3C;YACF;UACJ;UACA;MACF;IACJ;EACF;EAEAwG,UAAUA,CAAA,EAAG;IACX,IAAI,CAAC/F,QAAQ,CAACC,CAAC,IAAI,IAAI,CAACyB,OAAO;IAC/B,IAAI,CAACR,GAAG,IAAI,IAAI,CAAClB,QAAQ,CAACC,CAAC;EAC7B;EAEAY,MAAMA,CAAA,EAAG;IACP,IAAI,CAACoD,MAAM,EAAE;IACb,IAAI,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE,IAAI,CAACD,MAAM,GAAG,CAAC;IACjD,IAAI,CAACrD,IAAI,CAAC,CAAC;IACX,IAAI,CAACK,IAAI,IAAI,IAAI,CAACjB,QAAQ,CAACwB,CAAC;IAC5B,IAAI,CAACkE,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACK,UAAU,CAAC,CAAC,CAAC,CAAY;IAC9B,IAAI,CAACD,qBAAqB,CAAC,CAAC,CAAC,CAAC;EAChC;AACF;;;;;;;;;;;;;;AC3RA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;AACI;AACA;AACA;AACA;AACJ;AACI;AACA;AACJ;AACI;;AAEG,MAAMnG,iBAAiB,GAAG,CAC/B,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClF,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACtF,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClF,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,EAChF,CAAC,IAAI,GAAI,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAI,EAAE,EAAE,EAAE,GAAI,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtE,CAAC,EAAE,EAAE,IAAI,GAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAI,EAAE,CAAC,EACtE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EACpF,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CACjG;;;;;;;;;;;ACnCD;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA;UACA","sources":["webpack://platform_traveller/./src/index.js","webpack://platform_traveller/./src/js/AdditionalElements.js","webpack://platform_traveller/./src/js/Assets.js","webpack://platform_traveller/./src/js/Canvas.js","webpack://platform_traveller/./src/js/Collision.js","webpack://platform_traveller/./src/js/CreateImage.js","webpack://platform_traveller/./src/js/Keys.js","webpack://platform_traveller/./src/js/Platform.js","webpack://platform_traveller/./src/js/Player.js","webpack://platform_traveller/./src/js/data/collisions.js","webpack://platform_traveller/./src/sass/styles.scss","webpack://platform_traveller/webpack/bootstrap","webpack://platform_traveller/webpack/runtime/define property getters","webpack://platform_traveller/webpack/runtime/hasOwnProperty shorthand","webpack://platform_traveller/webpack/runtime/make namespace object","webpack://platform_traveller/webpack/before-startup","webpack://platform_traveller/webpack/startup","webpack://platform_traveller/webpack/after-startup"],"sourcesContent":["import './sass/styles.scss';\r\n\r\n// imagePlatform.onload = function getSizes () {\r\n//   imagePlatform.width = imagePlatform.naturalWidth;\r\n//   imagePlatform.height = imagePlatform.naturalHeight;\r\n//}\r\nimport { CollisionBlock, platforms, parsedCollisions } from './js/Collision';\r\nimport { canvas, c } from './js/Canvas';\r\nimport { createImage, Sprite } from './js/CreateImage';\r\nimport { Player } from './js/Player';\r\n\r\nimport { Platform,\r\n          PlatformSpikes,\r\n          Saw,\r\n          OneStep,\r\n          Fan,\r\n          JumpToggle,\r\n          PlatformOne,\r\n          PlatformTwo,\r\n          PlatformThree,\r\n        } from './js/Platform';\r\nimport { platformImgSrc300,\r\n          heroIdleR,\r\n          heroIdleL,\r\n          heroRunR,\r\n          heroRunL,\r\n          heroJumpR,\r\n          heroJumpL,\r\n          heroFallR,\r\n          heroFallL,\r\n          heroDeath,\r\n          backgroundImg,\r\n          platformSolid,\r\n          platformOneStep,\r\n          platformOneStepExplosion,\r\n          platformJump,\r\n          platformJumpDisabled,\r\n          platformOne,\r\n          platformTwo,\r\n          platformThree,\r\n          platformOneDisabled,\r\n          platformTwoDisabled,\r\n          platformThreeDisabled,\r\n          saw,\r\n          fan,\r\n          spike,\r\n        } from './js/Assets';\r\nimport { keys, keyDownHandler, keyUpHandler } from './js/Keys';\r\nimport { AdditionalElements } from './js/AdditionalElements';\r\n\r\n\r\n\r\ncanvas.width = 1024 // 1280 //window.innerWidth; // canvas.width = innerWidth;\r\ncanvas.height = 576 // 720 //window.innerHeight;\r\n\r\nlet leftNeighboorBlockFromHeroArr = [];\r\nexport let leftNeighboorBlockFromHero = null;\r\n\r\nexport let additionalElements = [\r\n  new AdditionalElements(0, 0, createImage(backgroundImg, canvas.width, canvas.height))\r\n]\r\n\r\n\r\n// export let platforms = [/* new Platform(210, 525, createImage(platformSolid, 36, 36)),\r\n//                 new Platform(330, 455, createImage(platformSolid, 36, 36)),\r\n//                 new Platform(250, 400, createImage(platformSolid, 36, 36)),\r\n//                 new Platform(400, 100, createImage(platformSolid, 36, 36)) */]; // создаем платформы\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { collisionsLevel_1 } from './js/data/collisions';\r\n\r\n\r\n\r\nconsole.log(platforms)\r\n\r\n\r\nexport let player = new Player({\r\n  platforms\r\n}); //collisionBlocks: collisionBlocks\r\n\r\n\r\n\r\n/* -------------------- */\r\n\r\n\r\n\r\n\r\n              //let spikes = new PlatformSpikes(420, 135, createImage(spike, 36, 36))\r\n              // let sawTrap = new Saw(400, 415, createImage(saw, 36, 36))\r\n             // export let sawTrap = new Saw(560, 315, createImage(saw, 36, 36))\r\n   // export let sawTrap2 = new OneStep(400, 455, createImage(platformOneStep, 36, 36))\r\n             // export let jump = new JumpToggle(100, 355, createImage(platformOne, 36, 36))\r\n\r\n\r\nexport function init() {\r\n  player.velocity.y = 1; \r\n  keys.spaceToggleCounter = 1;\r\n  additionalElements = [new AdditionalElements(0, 0, createImage(backgroundImg, canvas.width, canvas.height))\r\n];\r\n\r\n//   platforms = [/* new Platform(210, 455, createImage(platformSolid, 36, 36)),\r\n//           new Platform(230, 419, createImage(platformSolid, 36, 36)),\r\n// //new Platform(25, 420, createImage(platformSolid, 36, 36)),\r\n// new Platform(65, 420, createImage(platformSolid, 36, 36)),\r\n//               new Platform(315, 455, createImage(platformSolid, 36, 36)),\r\n//               new Platform(170, 455, createImage(platformSolid, 36, 36)),\r\n//               new Platform(130, 419, createImage(platformSolid, 36, 36)),\r\n// //new PlatformTwo(10, 419, createImage(platformSolid, 36, 36)),             \r\n// new Platform(160, 280, createImage(platformSolid, 36, 36)),\r\n// new Platform(196, 316, createImage(platformSolid, 36, 36)),\r\n//               new Platform(370, 200, createImage(platformSolid, 36, 36)),\r\n//               new Platform(345, 244, createImage(platformSolid, 36, 36)),\r\n//               new Platform(310, 278, createImage(platformSolid, 36, 36)),\r\n// new Platform(230, 278, createImage(platformSolid, 36, 36)),\r\n//               //265 204\r\n// // new PlatformTwo(120, 245, createImage(platformSolid, 36, 36)),\r\n// // new PlatformTwo(125, 281, createImage(platformSolid, 36, 36)),\r\n// //           new PlatformTwo(266, 349, createImage(platformSolid, 36, 36)),\r\n// //           new PlatformTwo(266, 312, createImage(platformSolid, 36, 36)),\r\n// //          new PlatformTwo(266, 276, createImage(platformSolid, 36, 36)),\r\n// //          new PlatformTwo(266, 240, createImage(platformSolid, 36, 36)),\r\n// //          new PlatformTwo(266, 204, createImage(platformSolid, 36, 36)),\r\n// //           new PlatformTwo(266, 384, createImage(platformSolid, 36, 36)),\r\n//               new PlatformOne(570, 200, createImage(platformSolid, 36, 36)),\r\n//               new PlatformThree(670, 200, createImage(platformSolid, 36, 36)),\r\n//               new Platform(280, 455, createImage(platformSolid, 36, 36)),\r\n//               new Platform(436, 455, createImage(platformSolid, 36, 36)),\r\n\r\n// // Right wall\r\n//               new Platform(830, 312, createImage(platformSolid, 36, 36)),\r\n//               new Platform(830, 348, createImage(platformSolid, 36, 36)),\r\n//               new Platform(830, 384, createImage(platformSolid, 36, 36)),\r\n//               new Platform(830, 419, createImage(platformSolid, 36, 36)),\r\n//               new Platform(830, 455, createImage(platformSolid, 36, 36)),\r\n//     spikes, sawTrap, sawTrap2, jump   */    ]; // создаем платформы !!!!!!!!!!!!!\r\n\r\n\r\n\r\n\r\n\r\n    \r\n                                          player = new Player({\r\n                                            platforms\r\n                                          });\r\n\r\n\r\n  platforms.forEach(platform => {\r\n    (platform.type === 'oneStep') && platform.restore()});\r\n\r\n}                      \r\n\r\n\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  //c.clearRect(0, 0, canvas.width, canvas.height);\r\n  c.fillStyle = ('white');\r\n  c.fillRect(0, 0, canvas.width, canvas.height);\r\n  console.log('animation counter');\r\n\r\n  additionalElements.forEach(element => element.draw());\r\n\r\n // !!!!!!!!!! переделать под обработку массива если у element есть element.type === 'jumpToggle'                      \r\n           \r\n                                                   \r\n                          \r\n                          platforms.forEach(platform => platform.draw());\r\n                          platforms.forEach(platform => platform.update()); // рисуем платформы\r\n                          platforms.forEach(platform => {\r\n                            (platform.type === 'jumpToggle') && platform.toggle()\r\n                          \r\n                          \r\n                          if (platform.type === 'platformOne' ||\r\n                          platform.type === 'platformTwo' ||\r\n                          platform.type === 'platformThree' /* ||\r\n                          platform.type === 'oneStep' */\r\n                          ) {\r\n                            platform.collision();\r\n                          }\r\n                          \r\n                          \r\n                          });\r\n                          \r\nleftNeighboorBlockFromHeroArr = platforms.filter(platform => {\r\n  return (platform.left <= player.left &&\r\n    (platform.top <= player.top &&\r\n    platform.bottom >= player.bottom)\r\n    );\r\n})\r\nleftNeighboorBlockFromHero = leftNeighboorBlockFromHeroArr[leftNeighboorBlockFromHeroArr.length - 1]\r\n\r\n\r\n                          player.update();\r\n\r\n\r\n  if (keys.right.pressed && (player.position.x + player.width) <= canvas.width) { // упор персонажа в правый край экрана\r\n    player.velocity.x = 2;\r\n  } else if (keys.left.pressed && player.position.x >= 0) { // упор персонажа в левый край экрана\r\n    player.velocity.x = -2;\r\n  } else {\r\n    player.velocity.x = 0;\r\n  }\r\n\r\n  \r\n  // platforms.forEach(platform => {\r\n  //   platform.collision();\r\n  //   // // Player - platform collision (player is above the platform)\r\n  //   // if (player.position.y + player.height <= platform.position.y &&\r\n  //   //     player.position.y + player.height + player.velocity.y >= platform.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n  //   //     // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n  //   //     player.position.x + player.width >= platform.position.x + player.width / 3 && // + player.width / 3 - поправка чтобы персонаж падал прямо с самого края платформы (без этого он еще выступал на ширину трети спрайта героя)\r\n  //   //     player.position.x <= platform.position.x + platform.width - player.width / 3) { \r\n  //   //       player.velocity.y = 0; // если касается земли\r\n  //   // }\r\n  //   // // Player - platform collision (player is under the platform)\r\n  //   // if (player.position.y <= platform.position.y + platform.height &&\r\n  //   //     player.position.y + player.height + player.velocity.y >= platform.position.y &&\r\n  //   //     player.position.x >= platform.position.x - player.width / 2 && // можно сделать 1.75\r\n  //   //     player.position.x + player.width <= platform.position.x + platform.width + player.width / 2) {\r\n  //   //       player.velocity.y = 1;/* player.currentSprite = player.sprites.idle.right */\r\n  //   // }\r\n  //   // // Player - platform collision (player is left from the platform and moves right)\r\n  //   // if (keys.right.pressed &&\r\n  //   //     player.position.y + player.height >= platform.position.y && \r\n  //   //     player.position.y <= platform.position.y + platform.height &&\r\n  //   //     player.position.x + player.width >= platform.position.x) {\r\n  //   //       player.velocity.x = 0;\r\n  //   //       console.log('hit!');\r\n  //   // } // Continue: Player - platform collision (player holds right and is right from the platform - so he cans move)\r\n  //   //   if (keys.right.pressed &&\r\n  //   //     player.position.y + player.height >= platform.position.y && \r\n  //   //     player.position.y <= platform.position.y + platform.height &&\r\n  //   //     player.position.x + player.width >= platform.position.x + platform.width) {\r\n  //   //       player.velocity.x = 2;\r\n  //   //       console.log('free!');\r\n  //   //   }\r\n  //   // // Player - platform collision (player is right from the platform and moves left)\r\n  //   // if (keys.left.pressed &&\r\n  //   //   player.position.y + player.height >= platform.position.y && \r\n  //   //   player.position.y <= platform.position.y + platform.height &&\r\n  //   //   player.position.x <= platform.position.x + platform.width) {\r\n  //   //     player.velocity.x = 0;\r\n  //   //     console.log('hit!');\r\n  //   // } // Continue: Player - platform collision (player holds left and is left from the platform - so he cans move)\r\n  //   //   if (keys.left.pressed &&\r\n  //   //     player.position.y + player.height >= platform.position.y && \r\n  //   //     player.position.y <= platform.position.y + platform.height &&\r\n  //   //     player.position.x + player.width <= platform.position.x) { // или \"-\" player.width ???\r\n  //   //       player.velocity.x = -2;\r\n  //   //       console.log('free!');\r\n  //   //   }\r\n  // })\r\n        \r\n        \r\nif (player.velocity.y >= player.jumpHeight - player.gravity && !keys.right.pressed && !keys.left.pressed && keys.lastPressed === 'right') { // 10 - когда персонаж на земле\r\n  player.currentSprite = player.sprites.idle.right;\r\n} else if (player.velocity.y >= player.jumpHeight - player.gravity && !keys.right.pressed && !keys.left.pressed && keys.lastPressed === 'left') { // 10 - когда персонаж на земле\r\n  player.currentSprite = player.sprites.idle.left;\r\n}\r\n\r\n\r\n    // Падение в пропасть (см. комментарии в player.update())\r\n      if (player.position.y > canvas.height) {\r\n// sawTrap.restore();\r\n                                                    //sawTrap2.restore(); // !!!!!!!!!!!!\r\nkeys.jumpToggleActive = !keys.jumpToggleActive;\r\n        init();\r\n        console.log('you lose')\r\n\r\n        // сюда вставить звук проигрыша\r\n      }\r\n\r\n\r\n}\r\ninit();\r\nanimate();\r\n\r\nwindow.addEventListener('keydown', keyDownHandler);\r\nwindow.addEventListener('keyup', keyUpHandler);\r\n\r\n\r\n\r\nwindow.addEventListener('click', (e) => {\r\n  console.log(e.clientX, e.clientY)\r\n   // debugger\r\n})","import { canvas, c } from './Canvas';\r\n\r\nexport class AdditionalElements {\r\n  constructor (posX, posY, image) {\r\n    this.position = {\r\n      x: posX,\r\n      y: posY\r\n    }\r\n    this.image = image;\r\n    this.width = image.width;\r\n    this.height = image.height;   \r\n  }\r\n  draw() {\r\n    c.drawImage(this.image, this.position.x, this.position.y)\r\n    // c.fillStyle = ('green');\r\n    // c.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n}","const platformImgSrc300 = '../assets/img/Platforms/platform.png';\r\nconst heroIdleR = '../assets/img/Hero/Idle_right.png';\r\nconst heroIdleL = '../assets/img/Hero/Idle_left.png';\r\nconst heroRunR = '../assets/img/Hero/Run_right.png';\r\nconst heroRunL = '../assets/img/Hero/Run_left.png';\r\nconst heroJumpR = '../assets/img/Hero/Jump_right.png';\r\nconst heroJumpL = '../assets/img/Hero/Jump_left.png';\r\nconst heroFallR = '../assets/img/Hero/Fall_right.png';\r\nconst heroFallL = '../assets/img/Hero/Fall_left.png';\r\nconst heroDeath = '../assets/img/Hero/Player_death.png';\r\nconst backgroundImg = '../assets/img/Background_images/bg_2.jpg';\r\nconst platformSolid = '../assets/img/Platforms/Platform_solid.png';\r\nconst platformOneStep = '../assets/img/Platforms/Platform_oneStep.png';\r\nconst platformOneStepExplosion = '../assets/img/Platforms/Platform_oneStep_Explosion.png';\r\nconst platformJump = '../assets/img/Platforms/Platform_jump.png';\r\nconst platformJumpDisabled = '../assets/img/Platforms/Platform_jump_disabled.png';\r\nconst platformOne = '../assets/img/Platforms/Platform_one.png';\r\nconst platformTwo = '../assets/img/Platforms/Platform_two.png';\r\nconst platformThree = '../assets/img/Platforms/Platform_three.png';\r\nconst platformOneDisabled = '../assets/img/Platforms/Platform_one_disabled.png';\r\nconst platformTwoDisabled = '../assets/img/Platforms/Platform_two_disabled.png';\r\nconst platformThreeDisabled = '../assets/img/Platforms/Platform_three_disabled.png';\r\nconst saw = '../assets/img/Traps/Saw.png';\r\nconst fan = '../assets/img/Traps/Fan.png';\r\nconst spike = '../assets/img/Traps/Platform_spikes.png';\r\n\r\n\r\n// import platformImgSrc300 from '/assets/img/platform.png';\r\n// import heroIdleR from '/assets/img/Idle_right.png';\r\n// import heroIdleL from '/assets/img/Idle_left.png';\r\n// import heroRunR from '/assets/img/Run_right.png';\r\n// import heroRunL from '/assets/img/Run_left.png';\r\n// import heroJumpR from '/assets/img/Jump_right.png';\r\n// import heroJumpL from '/assets/img/Jump_left.png';\r\n// import heroFallR from '/assets/img/Fall_right.png';\r\n// import heroFallL from '/assets/img/Fall_left.png';\r\n// import backgroundImg from '/assets/img/bg_2.jpg';\r\n\r\nexport { platformImgSrc300,\r\n        heroIdleR,\r\n        heroIdleL,\r\n        heroRunR,\r\n        heroRunL,\r\n        heroJumpR,\r\n        heroJumpL,\r\n        heroFallR,\r\n        heroFallL,\r\n        heroDeath,\r\n        backgroundImg,\r\n        platformSolid,\r\n        platformOneStep,\r\n        platformOneStepExplosion,\r\n        platformJump,\r\n        platformJumpDisabled,\r\n        platformOne,\r\n        platformTwo,\r\n        platformThree,\r\n        platformOneDisabled,\r\n        platformTwoDisabled,\r\n        platformThreeDisabled,\r\n        saw,\r\n        fan,\r\n        spike,\r\n      }","const canvas = document.getElementById('canvas');\r\nconst c = canvas.getContext(\"2d\");\r\n\r\n\r\nexport { canvas, c }","import { collisionsLevel_1 } from './data/collisions';\r\nimport { canvas, c } from './Canvas';\r\nimport { Platform,\r\n  PlatformSpikes,\r\n  Saw,\r\n  OneStep,\r\n  Fan,\r\n  JumpToggle,\r\n  PlatformOne,\r\n  PlatformTwo,\r\n  PlatformThree,\r\n} from './Platform';\r\n\r\nimport { platformImgSrc300,\r\n  heroIdleR,\r\n  heroIdleL,\r\n  heroRunR,\r\n  heroRunL,\r\n  heroJumpR,\r\n  heroJumpL,\r\n  heroFallR,\r\n  heroFallL,\r\n  heroDeath,\r\n  backgroundImg,\r\n  platformSolid,\r\n  platformOneStep,\r\n  platformOneStepExplosion,\r\n  platformJump,\r\n  platformJumpDisabled,\r\n  platformOne,\r\n  platformTwo,\r\n  platformThree,\r\n  platformOneDisabled,\r\n  platformTwoDisabled,\r\n  platformThreeDisabled,\r\n  saw,\r\n  fan,\r\n  spike,\r\n} from './Assets';\r\nimport { createImage, Sprite } from './CreateImage';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CollisionBlock {\r\n  constructor ({ position }) {\r\n    this.position = position;\r\n    this.width = 36;\r\n    this.height = 36;\r\n  }\r\n  draw() {\r\n    c.fillStyle = 'rgba(204,11,10,0.3)';\r\n    c.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n}\r\n\r\nconst platforms = [];\r\n// const parsedCollisions = collisionsLevel_1.forEach((row, index_Y) => {\r\n//   row.forEach((cell, index_X) => {\r\n//     if (cell === 292) {\r\n//       console.log(index_X, index_Y)\r\n//       platforms.push(new CollisionBlock(\r\n//         {position: {\r\n//           x: index_X * 36,\r\n//           y: index_Y * 36,\r\n//         }}))\r\n//     }\r\n//   })\r\n// })\r\nconst parsedCollisions = collisionsLevel_1.forEach((row, index_Y) => {\r\n  row.forEach((cell, index_X) => {\r\n    if (cell === '1p') { // Space toggled platform (One)\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new PlatformOne(\r\n        index_X * 36, index_Y * 36, createImage(platformOne, 36, 36), platforms))\r\n    }\r\n    if (cell === '2p') { // Space toggled platform (Two)\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new PlatformTwo(\r\n        index_X * 36, index_Y * 36, createImage(platformTwo, 36, 36), platforms))\r\n    }\r\n    if (cell === '3p') { // Space toggled platform (Three)\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new PlatformThree(\r\n        index_X * 36, index_Y * 36, createImage(platformThree, 36, 36), platforms))\r\n    }\r\n    if (cell === '1s') { // One-Step platform\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new OneStep(\r\n        index_X * 36, index_Y * 36, createImage(platformOneStep, 36, 36), platforms))\r\n    }\r\n    if (cell === 'sl') { // Solid platform\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new Platform( // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        index_X * 36, index_Y * 36, createImage(platformSolid, 36, 36), platforms))\r\n    }\r\n    if (cell === 'jp') { // Jump-toggled platform\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new JumpToggle(\r\n        index_X * 36, index_Y * 36, createImage(platformJump, 36, 36), platforms))\r\n    }\r\n    if (cell === 'sk') { // Spikes trap platform\r\n      console.log(index_X, index_Y);\r\n      platforms.push(new PlatformSpikes(\r\n        index_X * 36, index_Y * 36, createImage(spike, 36, 36), platforms))\r\n    }\r\n    if (cell === 'sw') { // Saw trap platform\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new Saw(\r\n        index_X * 36, index_Y * 36, createImage(saw, 36, 36), platforms))\r\n    }\r\n  })\r\n})\r\n\r\n\r\nexport { CollisionBlock, platforms, parsedCollisions }","export function createImage(src, width, height) {\r\n  const image = new Image();\r\n  image.src = src;\r\n  image.width = width;\r\n  image.height = height;\r\n  return image;\r\n}\r\n\r\n\r\nexport class Sprite {\r\n  constructor ({ position, imageSrc }) {\r\n    this.position = position;\r\n    this.image = new Image();\r\n    this.image.onload = () => {\r\n      this.loaded = true;\r\n    }\r\n    this.image.src = imageSrc;\r\n    this.loaded = false;\r\n  }\r\n  draw() {\r\n    if (!this.loaded) return;\r\n    c.drawImage(this.image, this.position.x, this.position.y)\r\n  }\r\n}","import { player } from '../index';\r\nimport { platforms } from '../index';\r\nimport { sawTrap, sawTrap2 } from '../index';\r\nimport { jump } from '../index';\r\n\r\n\r\n\r\nconst keys = {\r\n  right: {\r\n    pressed: false\r\n  },\r\n  left: {\r\n    pressed: false\r\n  },\r\n  up: {\r\n    pressed: false\r\n  },\r\n  lastPressed: 'right',\r\n  jumpToggleActive: true,\r\n  spaceToggleCounter: 1, // Platform One type is active\r\n  deadSignalZone: false,\r\n};\r\n                                                // let hiddenPlatformsArr = []\r\nconst keyDownHandler = (e) => {\r\n  console.log(e.code)\r\n  if (e.repeat == false) {\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        if (player.velocity.y === 0) {\r\n          keys.jumpToggleActive ? keys.jumpToggleActive = false : keys.jumpToggleActive = true;\r\n        }\r\n        keys.up.pressed = true;\r\n        if (player.velocity.y === 0 && keys.lastPressed === 'right') { // player.velocity.y === 0 - только один прыжок при нескольких нажатиях на UP\r\n          player.velocity.y -= player.jumpHeight; // -20 is higher\r\n          player.currentSprite = player.sprites.jump.right;\r\n        } else if (player.velocity.y === 0 && keys.lastPressed === 'left') { // player.velocity.y === 0 - только один прыжок при нескольких нажатиях на UP\r\n          player.velocity.y -= player.jumpHeight; // -20 is higher\r\n          player.currentSprite = player.sprites.jump.left;\r\n        }\r\n        break;\r\n\r\n      case 'Space': {\r\n        !keys.deadSignalZone && keys.spaceToggleCounter++;\r\n      }\r\n        break;\r\n\r\n      case 'ArrowRight': {\r\n        keys.right.pressed = true;\r\n        keys.lastPressed = 'right';\r\n        player.currentSprite = player.sprites.run.right;\r\n      }\r\n        break;\r\n      case 'ArrowLeft': {\r\n        keys.left.pressed = true;\r\n        keys.lastPressed = 'left';\r\n        player.currentSprite = player.sprites.run.left;\r\n      }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nconst keyUpHandler = (e) => {\r\n  if (e.repeat == false) {\r\n    switch (e.code) {\r\n      case 'ArrowUp': \r\n        // player.velocity.y = 0;\r\n        keys.up.pressed = false;\r\n        // keys.up.pressed = true;\r\n        if (player.velocity.y !== 0 && keys.lastPressed === 'right') {\r\n          player.currentSprite = player.sprites.fall.right;\r\n        } else if (player.velocity.y !== 0 && keys.lastPressed === 'left') {\r\n          player.currentSprite = player.sprites.fall.left;\r\n        }\r\n        break;\r\n      // case 'ArrowDown': player.velocity.y = 0\r\n      //   break;\r\n      case 'ArrowRight': {\r\n        keys.right.pressed = false;\r\n        player.currentSprite = player.sprites.idle.right;\r\n      }\r\n        break;\r\n      case 'ArrowLeft': {\r\n        keys.left.pressed = false;\r\n        player.currentSprite = player.sprites.idle.left;\r\n      }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { keys, keyDownHandler, keyUpHandler };","import { CollisionBlock, platforms, parsedCollisions } from './Collision';\r\nimport { canvas, c } from './Canvas';\r\nimport { createImage } from './CreateImage';\r\nimport { platformImgSrc300,\r\n  heroIdleR,\r\n  heroIdleL,\r\n  heroRunR,\r\n  heroRunL,\r\n  heroJumpR,\r\n  heroJumpL,\r\n  heroFallR,\r\n  heroFallL,\r\n  heroDeath,\r\n  backgroundImg,\r\n  platformSolid,\r\n  platformOneStep,\r\n  platformOneStepExplosion,\r\n  platformJump,\r\n  platformJumpDisabled,\r\n  platformOne,\r\n  platformTwo,\r\n  platformThree,\r\n  platformOneDisabled,\r\n  platformTwoDisabled,\r\n  platformThreeDisabled,\r\n  saw,\r\n  fan,\r\n  spike,\r\n      } from './Assets';\r\n\r\n     \r\n      \r\n\r\n\r\nimport { keys } from './Keys';\r\nimport { player } from '../index';\r\nimport { leftNeighboorBlockFromHero } from '../index';\r\nclass Platform {\r\n  constructor (posX, posY, image) {\r\n    this.position = {\r\n      x: posX,\r\n      y: posY\r\n    }\r\n    this.image = image;\r\n    this.width = image.width;\r\n    this.height = image.height;\r\n    this.frames = 0;\r\n    this.frequency = 28;\r\n    this.sprites = {\r\n      idle: this.image,\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.type = 'solid';\r\n    this.statusActive = true;\r\n  }\r\n\r\n  get top() {\r\n    return this.position.y;\r\n  }\r\n  get bottom() {\r\n    return this.position.y + this.height;\r\n  }\r\n  get left() {\r\n    return this.position.x;\r\n  }\r\n  get right() {\r\n    return this.position.x + this.width;\r\n  }\r\n\r\n  set top(value) {\r\n    this.position.y = value;\r\n  }\r\n  set bottom(value) {\r\n    this.position.y = value;\r\n  }\r\n  set left(value) {\r\n    this.position.x = value;\r\n  }\r\n  set right(value) {\r\n    this.position.x = value;\r\n  }\r\n\r\n  getType() {\r\n    return this.type;\r\n  }\r\n  draw() {\r\n    c.drawImage(this.currentSprite, 36 * this.frames, 0, 36, 36, this.position.x, this.position.y, this.width, this.height) // 48, 0, 48, 48 - player sprite crop (x, y, w, h) // 36 размер кадра в спрайте\r\n  }\r\n  update() {\r\n    this.frames++;\r\n    if (this.frames > this.frequency) this.frames = 0;\r\n    this.draw();\r\n  }\r\n  collisionAbove() {\r\n  // Player - platform collision (player is above the platform)\r\n    if (player.position.y + player.height <= this.position.y &&\r\n      player.position.y + player.height + player.velocity.y >= this.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n      // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n      player.position.x + player.width - player.width / 4 >= this.position.x  && // + player.width / 3 - поправка чтобы персонаж падал прямо с самого края платформы (без этого он еще выступал на ширину трети спрайта героя)\r\n      player.position.x <= this.position.x + this.width - player.width / 4) { \r\n      player.velocity.y = -3.5; // если касается земли\r\n    \r\n      if (keys.up.pressed ||\r\n      keys.up.pressed && keys.right.pressed ||\r\n      keys.up.pressed && keys.left.pressed) {\r\n        player.velocity.y = -player.jumpHeight;\r\n        player.gravity = 0.25;\r\n      } \r\n    }\r\n  }\r\n  collisionUnder() {\r\n  // Player - platform collision (player is under the platform)\r\n    if (player.position.y - player.velocity.y * 0.5 <= this.position.y + this.height &&\r\n      player.position.y + player.height + player.velocity.y >= this.position.y &&\r\n      player.position.x >= this.position.x - player.width / 1.25 && // можно сделать 1.75\r\n      player.position.x + player.width <= this.position.x + this.width + player.width / 1.25) {\r\n        player.velocity.y = 1;/* player.currentSprite = player.sprites.idle.right */\r\n      }\r\n  }\r\n  collisionLeftSide() {\r\n  // Player - platform collision (player is left from the platform and moves right)\r\n    if (keys.right.pressed &&\r\n      player.position.y + player.height >= this.position.y && \r\n      player.position.y <= this.position.y + this.height &&\r\n      player.position.x + player.width >= this.position.x) {\r\n        player.velocity.x = 0;\r\n        console.log('hit!');\r\n    } // Continue: Player - platform collision (player holds right and is right from the platform - so he cans move)\r\n    if (keys.right.pressed &&\r\n      player.position.y + player.height >= this.position.y && \r\n      player.position.y <= this.position.y + this.height &&\r\n      player.position.x + player.width >= this.position.x + this.width) {\r\n        player.velocity.x = 2;\r\n        console.log('free!');\r\n    }\r\n  }\r\n  collisionRightSide() {\r\n  // Player - platform collision (player is right from the platform and moves left)\r\n    if (keys.left.pressed &&\r\n      (leftNeighboorBlockFromHero != undefined || leftNeighboorBlockFromHero != null) &&\r\n      player.position.y + player.height >= leftNeighboorBlockFromHero.position.y && \r\n      player.position.y <= leftNeighboorBlockFromHero.position.y + leftNeighboorBlockFromHero.height &&\r\n      player.position.x <= leftNeighboorBlockFromHero.position.x + leftNeighboorBlockFromHero.width) {\r\n        player.velocity.x = 0;\r\n        console.log('hit!');\r\n    } // Continue: Player - platform collision (player holds left and is left from the platform - so he cans move)\r\n      if (keys.left.pressed &&\r\n        leftNeighboorBlockFromHero != undefined &&\r\n        (player.position.y + player.height <= leftNeighboorBlockFromHero.position.y || \r\n        player.position.y >= leftNeighboorBlockFromHero.position.y + leftNeighboorBlockFromHero.height) &&\r\n        player.position.x <= leftNeighboorBlockFromHero.position.x) { // или \"-\" player.width ???\r\n          player.velocity.x = -2;\r\n          console.log('free!');\r\n      }\r\n    }\r\n  \r\n  collision() { // разбито на отдельные методы, для частичного наследования (если понадобится)\r\n    this.collisionAbove();\r\n    this.collisionUnder();\r\n    this.collisionLeftSide();\r\n    this.collisionRightSide();\r\n  }\r\n}\r\n\r\n  class PlatformSpikes extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'spikes';\r\n  }\r\n  collision() {\r\n  // Player - platform collision (player is above the spike platform)\r\n    if (player.position.y + player.height <= this.position.y &&\r\n      player.position.y + player.height + player.velocity.y >= this.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n      // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n      player.position.x + player.width >= this.position.x + player.width / 3 && // + player.width / 3 - поправка чтобы персонаж погибал касаясь самого края платформы (без этого он еще погибал не доходя трети ширины спрайта героя)\r\n      player.position.x <= this.position.x + this.width - player.width / 3) { \r\n      player.die();\r\n    }\r\n    // Player - platform collision (player is under the platform)\r\n    if (player.position.y <= this.position.y + this.height &&\r\n      player.position.y + player.height + player.velocity.y >= this.position.y &&\r\n      player.position.x >= this.position.x - player.width / 2 && // можно сделать 1.75\r\n      player.position.x + player.width <= this.position.x + this.width + player.width / 2) {\r\n        player.die();\r\n    }\r\n  }\r\n}\r\n\r\nclass Saw extends PlatformSpikes {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'saw';\r\n    this.frequency = 23;\r\n  }\r\n}\r\n\r\nclass Fan extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'fan';\r\n    this.sprites = {\r\n      idle: createImage(fan, 36, 36),\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.frequency = 23;\r\n  }\r\n}\r\n\r\nclass JumpToggle extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'jumpToggle';\r\n    this.sprites = {\r\n      idle: createImage(platformJump, 36, 36),\r\n      disabled: createImage(platformJumpDisabled, 36, 36),\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.frequency = 63;\r\n  }\r\n  toggle() {\r\n    keys.jumpToggleActive === true ? this.currentSprite = this.sprites.idle : this.currentSprite = this.sprites.disabled;\r\n  }\r\n  collision() {\r\n    if (keys.jumpToggleActive) {\r\n      super.collision();\r\n    }\r\n  }\r\n}\r\n\r\nclass OneStep extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.temporaryPosX = posX;\r\n    this.hits = 0;\r\n    this.sprites = {\r\n      idle: createImage(platformOneStep, 36, 36),\r\n      explosion: createImage(platformOneStepExplosion, 36, 36),\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.frequency = 28;\r\n    this.type = 'oneStep';\r\n  }\r\n  destroy() {\r\n    this.currentSprite = this.sprites.explosion;\r\n    setTimeout(() => {\r\n      this.position.x = -9999;\r\n      this.currentSprite = this.sprites.idle;\r\n  }, 550);\r\n    this.hits = 0;\r\n  } \r\n  restore() {\r\n    this.position.x = this.temporaryPosX;\r\n  }\r\n}\r\n\r\nclass SpaceToggledPlatform extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'toggledBySpacePlatform';\r\n    this.sprites = {\r\n      idle: createImage(platformOne, 36, 36),\r\n      disabled: createImage(platformOneDisabled, 36, 36),\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.frequency = 63;\r\n    this.setCount = null;\r\n    this.activeStatus = true;\r\n  }\r\n  checkSpaceToggleCounter() {\r\n   keys.spaceToggleCounter >= 4 ? keys.spaceToggleCounter =  1 : keys.spaceToggleCounter; \r\n  }\r\n  collision() {\r\n    if (keys.spaceToggleCounter === this.setCount) {\r\n      super.collisionAbove();\r\n      super.collisionUnder();\r\n      super.collisionLeftSide();\r\n      if ((leftNeighboorBlockFromHero != undefined ||\r\n        leftNeighboorBlockFromHero != null) &&\r\n        keys.spaceToggleCounter === leftNeighboorBlockFromHero.setCount) {\r\n          super.collisionRightSide();\r\n      }\r\n      \r\n      this.currentSprite = this.sprites.idle;\r\n      this.checkSpaceToggleCounter();\r\n    } else {\r\n      this.currentSprite = this.sprites.disabled;\r\n      this.checkSpaceToggleCounter();\r\n    // Hero is inside or outside of Platform (for toggled by space platformes and deadSignal zone platforms)   \r\n    if (platforms.some((elem) => {\r\n      return (player.position.y + player.height * 0.75 >= elem.position.y &&\r\n        player.position.y + player.height * 0.35 <= elem.position.y + elem.height &&\r\n        player.position.x + player.width * 0.75 >= elem.position.x &&\r\n        player.position.x + player.width * 0.25 <= elem.position.x + elem.width);\r\n    })) {\r\n      keys.deadSignalZone = true;\r\n      console.log('inside')\r\n    } else {\r\n      console.log('outside')   \r\n      keys.deadSignalZone = false;\r\n    }\r\n    }\r\n  } \r\n}\r\n\r\nclass PlatformOne extends SpaceToggledPlatform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'platformOne';\r\n    this.setCount = 1;\r\n    this.sprites = {\r\n      idle: createImage(platformOne, 36, 36),\r\n      disabled: createImage(platformOneDisabled, 36, 36),\r\n    }\r\n  }\r\n}\r\n\r\nclass PlatformTwo extends SpaceToggledPlatform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'platformTwo';\r\n    this.setCount = 2;\r\n    this.sprites = {\r\n      idle: createImage(platformTwo, 36, 36),\r\n      disabled: createImage(platformTwoDisabled, 36, 36),\r\n    }\r\n  }\r\n}\r\n\r\nclass PlatformThree extends SpaceToggledPlatform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'platformThree';\r\n    this.setCount = 3;\r\n    this.sprites = {\r\n      idle: createImage(platformThree, 36, 36),\r\n      disabled: createImage(platformThreeDisabled, 36, 36),\r\n    }\r\n  }\r\n}\r\n\r\nexport { Platform,\r\n        PlatformSpikes,\r\n        Saw,\r\n        OneStep,\r\n        Fan,\r\n        JumpToggle,\r\n        PlatformOne,\r\n        PlatformTwo,\r\n        PlatformThree,\r\n      }","import { canvas, c } from './Canvas';\r\nimport { createImage } from './CreateImage';\r\nimport { init } from '../index';\r\nimport { keys } from './Keys';\r\nimport { platformImgSrc300,\r\n  heroIdleR,\r\n  heroIdleL,\r\n  heroRunR,\r\n  heroRunL,\r\n  heroJumpR,\r\n  heroJumpL,\r\n  heroFallR,\r\n  heroFallL,\r\n  heroDeath,\r\n  backgroundImg,\r\n  platformSolid,\r\n  platformOneStep,\r\n  platformOneStepExplosion,\r\n  platformJump,\r\n  platformJumpDisabled,\r\n  platformOne,\r\n  platformTwo,\r\n  platformThree,\r\n  platformOneDisabled,\r\n  platformTwoDisabled,\r\n  platformThreeDisabled,\r\n  saw,\r\n  fan,\r\n  spike,\r\n      } from '../js/Assets';\r\nimport { platforms, intersection } from '../index';\r\n\r\n\r\nexport class Player {\r\n  constructor({ platforms = [] }) {\r\n    this.platforms = platforms;\r\n    this.position = {\r\n      x: 180,\r\n      y: 247 //canvas.height / 2\r\n    }\r\n    this.velocity = {\r\n      x: 0,\r\n      y: 1 \r\n    }\r\n    this.gravity = 0.25;\r\n    this.jumpHeight = 10; // -20 is higher\r\n    this.width = 32;\r\n    this.height = 32;\r\n    this.frequency = 21;\r\n    this.frames = 0;\r\n    this.sprites = {\r\n      idle: {\r\n        right: createImage(heroIdleR, 32, 32),\r\n        left: createImage(heroIdleL, 32, 32),\r\n      },\r\n      run: {\r\n        right: createImage(heroRunR, 32, 32),\r\n        left: createImage(heroRunL, 32, 32),\r\n      },\r\n      jump: {\r\n        right: createImage(heroJumpR, 32, 32),\r\n        left: createImage(heroJumpL, 32, 32),\r\n      },\r\n      fall: {\r\n        right: createImage(heroFallR, 32, 32),\r\n        left: createImage(heroFallL, 32, 32),\r\n      },\r\n      death: createImage(heroDeath, 32, 32),\r\n    }\r\n    this.currentSprite = this.sprites.idle.right;\r\n  }\r\n            \r\n  get top() {\r\n    return this.position.y;\r\n  }\r\n  get bottom() {\r\n    return this.position.y + this.height;\r\n  }\r\n  get left() {\r\n    return this.position.x;\r\n  }\r\n  get right() {\r\n    return this.position.x + this.width;\r\n  }\r\n\r\n  set top(value) {\r\n    this.position.y = value;\r\n  }\r\n  set bottom(value) {\r\n    this.position.y = value;\r\n  }\r\n  set left(value) {\r\n    this.position.x = value;\r\n  }\r\n  set right(value) {\r\n    this.position.x = value;\r\n  }\r\n\r\n  draw() {\r\n    c.drawImage(this.currentSprite, 32 * this.frames, 0, 32, 32, this.left, this.top, this.width, this.height) // 32, 0, 32, 32 - player sprite crop (x, y, w, h)\r\n  }\r\n\r\n  die() {\r\n    this.velocity.x = 0;\r\n    this.velocity.y = -2;\r\n    this.gravity = 0\r\n    this.currentSprite = this.sprites.death;\r\n    setTimeout(init, 550);\r\n  }\r\n\r\n  checkCollisionsAxes_X() {\r\n    // X-axes collision\r\n    for (let i = 0; i < this.platforms.length; i++) {\r\n      const platform = this.platforms[i];\r\n      // If a collision exists\r\n      switch(platform.type) {\r\n        case 'fan':\r\n        case 'solid':\r\n          if (this.left <= platform.right &&\r\n            this.right >= platform.left &&\r\n            this.top <= platform.bottom &&\r\n            this.bottom >= platform.top) {\r\n              if (this.velocity.x < 0) {// moving left       // <= -2\r\n                this.left = platform.right + 0.1;\r\n                break;\r\n              }\r\n              if (this.velocity.x > 0) {// moving right      // <= 2\r\n                this.left = platform.left - this.width - 0.1;\r\n                break;\r\n              }\r\n          }\r\n          break;\r\n\r\n        case 'jumpToggle':\r\n          if (keys.jumpToggleActive &&\r\n            this.left <= platform.right &&\r\n            this.right >= platform.left &&\r\n            this.top <= platform.bottom &&\r\n            this.bottom >= platform.top) {\r\n              if (this.velocity.x < 0) {// moving left       // <= -2\r\n                this.left = platform.right + 0.1;\r\n                break;\r\n              }\r\n              if (this.velocity.x > 0) {// moving right      // <= 2\r\n                this.left = platform.left - this.width - 0.1;\r\n                break;\r\n              }\r\n            }\r\n            break;\r\n\r\n        case 'spikes':\r\n        case 'saw':\r\n          // Hero - platform collision (player is above the spike platform)\r\n          if (this.bottom <= platform.top + this.height / 3 &&\r\n            this.bottom + this.velocity.y >= platform.top + this.height / 3 &&   \r\n            this.right >= platform.left + this.width / 3 && \r\n            this.left <= platform.right - this.width / 3\r\n            ) {\r\n              //debugger\r\n              this.die();\r\n          }\r\n          // Hero - platform collision (player is under the platform)\r\n          if (this.top <= platform.bottom - Math.abs(this.velocity.y) &&\r\n            this.bottom + this.velocity.y >= platform.top + this.height / 3 && // + this.velocity.y // оставить!!\r\n            this.left >= platform.left - this.width / 1.5 &&\r\n            this.right <= platform.right + this.width / 1.5) {\r\n              //debugger\r\n              this.die();\r\n          }\r\n          break;\r\n\r\n        case 'oneStep':\r\n          if (platform.hits === 0 &&\r\n            this.left <= platform.right &&\r\n            this.right >= platform.left &&\r\n            this.top <= platform.bottom &&\r\n            this.bottom >= platform.top) {\r\n              if (this.velocity.x < 0) {// moves left       // <= -2\r\n                this.left = platform.right + 0.1;\r\n                keys.left.pressed = false;        \r\n                platform.hits++;\r\n                platform.destroy();\r\n                break;\r\n              }\r\n              if (this.velocity.x > 0) {// moves right      // <= 2\r\n                this.left = platform.left - this.width - 0.1;\r\n                keys.right.pressed = false;      \r\n                platform.hits++;\r\n                platform.destroy();\r\n                break;\r\n              }\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCollisionsAxes_Y() {\r\n    // Y-axes collision\r\n    for (let i = 0; i < this.platforms.length; i++) {\r\n      const platform = this.platforms[i];\r\n      // If a collision exists\r\n      switch(platform.type) {\r\n        case 'fan':\r\n        case 'solid':\r\n          if (this.left <= platform.right &&\r\n            this.right >= platform.left &&\r\n            this.top <= platform.bottom &&\r\n            this.bottom >= platform.top) {\r\n              if (this.velocity.y < 0) {// moving up  // -0.25\r\n                this.velocity.y = 0;\r\n                this.top = platform.bottom + 0.1;\r\n                break;\r\n              }\r\n              if (this.velocity.y > 0) {// falling down  // 0.25\r\n                this.velocity.y = 0;\r\n                this.top = platform.top - this.height - 0.1;\r\n                break;\r\n              }\r\n          }\r\n          break;\r\n          \r\n        case 'jumpToggle':\r\n          if (keys.jumpToggleActive &&\r\n            this.left <= platform.right &&\r\n            this.right >= platform.left &&\r\n            this.top <= platform.bottom &&\r\n            this.bottom >= platform.top) {\r\n              if (this.velocity.y < 0) {// moving up  // -0.25\r\n                this.velocity.y = 0;\r\n                this.top = platform.bottom + 0.1;\r\n                break;\r\n              }\r\n              if (this.velocity.y > 0) {// falling down  // 0.25\r\n                this.velocity.y = 0;\r\n                this.top = platform.top - this.height - 0.1;\r\n                break;\r\n              }\r\n          }\r\n          break;\r\n\r\n        case 'oneStep':\r\n          if (platform.hits === 0 &&\r\n            this.left <= platform.right &&\r\n            this.right >= platform.left &&\r\n            this.top <= platform.bottom &&\r\n            this.bottom >= platform.top) {\r\n              if (this.velocity.y < 0) {// moving up  // -0.25\r\n                this.velocity.y = 0;\r\n                this.top = platform.bottom + 0.1;\r\n                keys.up.pressed = false;      \r\n                platform.hits++;\r\n                platform.destroy();\r\n                break;\r\n              }\r\n              if (this.velocity.y > 0) {// falling down  // 0.25\r\n                this.velocity.y = 0;\r\n                keys.up.pressed = false;      \r\n                platform.hits++;\r\n                platform.destroy();\r\n                this.top = platform.top - this.height - 0.1;\r\n                break;\r\n              }\r\n          }\r\n          break;\r\n        }\r\n    }\r\n  }\r\n\r\n  setGravity() {\r\n    this.velocity.y += this.gravity;\r\n    this.top += this.velocity.y;\r\n  }\r\n\r\n  update() {\r\n    this.frames++;\r\n    if (this.frames > this.frequency) this.frames = 0;\r\n    this.draw();\r\n    this.left += this.velocity.x;\r\n    this.checkCollisionsAxes_X(); // strict order\r\n    this.setGravity();            // strict order\r\n    this.checkCollisionsAxes_Y(); // strict order\r\n  }\r\n}","// Platforms:\r\n    // sl - platform Solid\r\n    // 1p - platform One\r\n    // 2p - platform Two\r\n    // 3p - platform Three\r\n    // jp - platform Jump-Toggle\r\n    // 1s - platform One-Step\r\n// Traps:\r\n    // sw - Saw trap\r\n    // sk - Spikes trap\r\n    // ft - Flamethrower\r\n    // dz - Dead signal zone\r\n// Decorations:\r\n    // 1b - Frame brick 1\r\n    // 2b - Frame block 2\r\n// Empty:\r\n    // ee - Empty block\r\n\r\nexport const collisionsLevel_1 = [\r\n  ['sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl'],\r\n  ['sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl'],\r\n  ['sl', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', 'sl'],\r\n  ['sl', '1p', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', '1p', 'sl'],\r\n  ['sl', '1p', 'sl', 'sl', 'sl', 'sl', '', '', '', '', '', '', '', 'sl', '1p', 'sl'],\r\n  ['sl', '1p', 'sl', 'sl', 'sl', 'sl', '', '', '', '', '', 'sl', 'sl', 'sl', '1p', 'sl'],\r\n  ['sl', '1p', 'sl', 'sl', '2p', '', '', '', '', '', '', '', 'jp', 'sw', '1p', 'sl'],\r\n  ['sl', '1p', 'sl', 'sl', 'sl', 'sl', '', '', '', '', '', '', '', '', '1p', 'sl'],\r\n  ['sl', , 'sl', 'sl', '', '', '', '', '', '', '', '', '1s', '', '1p', 'sl'],\r\n  ['sl', '1p', '1p', '', '', , '', '', , '1s', '1s', '', '', '', '1p', 'sl'],\r\n  ['sl', '1p', 'sl', '', '', '', '', '', '', '', '', '', '', '', '', ''],\r\n  ['', 'sl', , '', '', '1s', '', '', '3p', '', '2p', '', 'sk', '', , ''],\r\n  ['', '1p', '', 'sl', 'sl', '', '1p', 'sl', '', 'sl', '', 'sl', 'sl', 'sl', '1p', ''],\r\n  ['sl', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', '1p', 'sl', '1p', 'sl'],\r\n  ['sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl'],\r\n  ['sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl', 'sl']\r\n];","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./src/index.js\");\nvar __webpack_exports__ = __webpack_require__(\"./src/sass/styles.scss\");\n",""],"names":["CollisionBlock","platforms","parsedCollisions","canvas","c","createImage","Sprite","Player","Platform","PlatformSpikes","Saw","OneStep","Fan","JumpToggle","PlatformOne","PlatformTwo","PlatformThree","platformImgSrc300","heroIdleR","heroIdleL","heroRunR","heroRunL","heroJumpR","heroJumpL","heroFallR","heroFallL","heroDeath","backgroundImg","platformSolid","platformOneStep","platformOneStepExplosion","platformJump","platformJumpDisabled","platformOne","platformTwo","platformThree","platformOneDisabled","platformTwoDisabled","platformThreeDisabled","saw","fan","spike","keys","keyDownHandler","keyUpHandler","AdditionalElements","width","height","leftNeighboorBlockFromHeroArr","leftNeighboorBlockFromHero","additionalElements","collisionsLevel_1","console","log","player","init","velocity","y","spaceToggleCounter","forEach","platform","type","restore","animate","requestAnimationFrame","fillStyle","fillRect","element","draw","update","toggle","collision","filter","left","top","bottom","length","right","pressed","position","x","jumpHeight","gravity","lastPressed","currentSprite","sprites","idle","jumpToggleActive","window","addEventListener","e","clientX","clientY","constructor","posX","posY","image","drawImage","document","getElementById","getContext","_ref","row","index_Y","cell","index_X","push","src","Image","imageSrc","onload","loaded","sawTrap","sawTrap2","jump","up","deadSignalZone","code","repeat","run","fall","frames","frequency","statusActive","value","getType","collisionAbove","collisionUnder","collisionLeftSide","collisionRightSide","undefined","die","disabled","temporaryPosX","hits","explosion","destroy","setTimeout","SpaceToggledPlatform","setCount","activeStatus","checkSpaceToggleCounter","some","elem","intersection","death","checkCollisionsAxes_X","i","Math","abs","checkCollisionsAxes_Y","setGravity"],"sourceRoot":""}