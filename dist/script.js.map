{"version":3,"file":"script.js","mappings":"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ACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,MAAM/C,QAAQ,CAAC;EACb8E,WAAWA,CAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAkB;IAAA,IAAhBtC,SAAS,GAAAgE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAC5C,IAAI,CAAChE,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACoB,QAAQ,GAAG;MACdC,CAAC,EAAEe,IAAI;MACP7B,CAAC,EAAE8B;IACL,CAAC;IACD,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC3C,KAAK,GAAG2C,KAAK,CAAC3C,KAAK;IACxB,IAAI,CAACC,MAAM,GAAG0C,KAAK,CAAC1C,MAAM;IAC1B,IAAI,CAACuE,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACzC,OAAO,GAAG;MACbC,IAAI,EAAE,IAAI,CAACU;IACb,CAAC;IACD,IAAI,CAACZ,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI;IACtC,IAAI,CAACyC,IAAI,GAAG,OAAO;EACrB;;EAIA;EACA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAAClD,QAAQ,CAACb,CA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I,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAClF,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC9F,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC9F,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC9F,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC1F,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC3F,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC1F,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC3F,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC9F,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC9F,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAC9F,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EACnF,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CACjG;;;;;;;;;;;ACnCD;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA;UACA","sources":["webpack://platform_traveller/./src/index.js","webpack://platform_traveller/./src/js/AdditionalElements.js","webpack://platform_traveller/./src/js/Assets.js","webpack://platform_traveller/./src/js/Canvas.js","webpack://platform_traveller/./src/js/Collision.js","webpack://platform_traveller/./src/js/CreateImage.js","webpack://platform_traveller/./src/js/Keys.js","webpack://platform_traveller/./src/js/Platform.js","webpack://platform_traveller/./src/js/Player.js","webpack://platform_traveller/./src/js/data/collisions.js","webpack://platform_traveller/./src/sass/styles.scss","webpack://platform_traveller/webpack/bootstrap","webpack://platform_traveller/webpack/runtime/define property getters","webpack://platform_traveller/webpack/runtime/hasOwnProperty shorthand","webpack://platform_traveller/webpack/runtime/make namespace object","webpack://platform_traveller/webpack/before-startup","webpack://platform_traveller/webpack/startup","webpack://platform_traveller/webpack/after-startup"],"sourcesContent":["import './sass/styles.scss';\r\n\r\n// imagePlatform.onload = function getSizes () {\r\n//   imagePlatform.width = imagePlatform.naturalWidth;\r\n//   imagePlatform.height = imagePlatform.naturalHeight;\r\n//}\r\nimport { canvas, c } from './js/Canvas';\r\nimport { createImage, Sprite } from './js/CreateImage';\r\nimport { Player } from './js/Player';\r\nimport { Platform,\r\n          PlatformSpikes,\r\n          Saw,\r\n          OneStep,\r\n          Fan,\r\n          JumpToggle,\r\n          PlatformOne,\r\n          PlatformTwo,\r\n          PlatformThree,\r\n        } from './js/Platform';\r\nimport { platformImgSrc300,\r\n          heroIdleR,\r\n          heroIdleL,\r\n          heroRunR,\r\n          heroRunL,\r\n          heroJumpR,\r\n          heroJumpL,\r\n          heroFallR,\r\n          heroFallL,\r\n          heroDeath,\r\n          backgroundImg,\r\n          platformSolid,\r\n          platformOneStep,\r\n          platformOneStepExplosion,\r\n          platformJump,\r\n          platformJumpDisabled,\r\n          platformOne,\r\n          platformTwo,\r\n          platformThree,\r\n          platformOneDisabled,\r\n          platformTwoDisabled,\r\n          platformThreeDisabled,\r\n          saw,\r\n          fan,\r\n          spike,\r\n        } from './js/Assets';\r\nimport { keys, keyDownHandler, keyUpHandler } from './js/Keys';\r\nimport { AdditionalElements } from './js/AdditionalElements';\r\n\r\n\r\n\r\ncanvas.width = 1024 // 1280 //window.innerWidth; // canvas.width = innerWidth;\r\ncanvas.height = 576 // 720 //window.innerHeight;\r\n\r\n\r\n\r\nexport let additionalElements = [\r\n  new AdditionalElements(0, 0, createImage(backgroundImg, canvas.width, canvas.height))\r\n]\r\n\r\n\r\n// export let platforms = [/* new Platform(210, 525, createImage(platformSolid, 36, 36)),\r\n//                 new Platform(330, 455, createImage(platformSolid, 36, 36)),\r\n//                 new Platform(250, 400, createImage(platformSolid, 36, 36)),\r\n//                 new Platform(400, 100, createImage(platformSolid, 36, 36)) */]; // создаем платформы\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { collisionsLevel_1 } from './js/data/collisions';\r\nimport { CollisionBlock, platforms, parsedCollisions } from './js/Collision';\r\n\r\n\r\nconsole.log(platforms)\r\n\r\n\r\nexport let player = new Player({\r\n  platforms\r\n}); //collisionBlocks: collisionBlocks\r\n\r\n\r\n\r\n/* -------------------- */\r\n\r\n\r\n\r\n\r\n              //let spikes = new PlatformSpikes(420, 135, createImage(spike, 36, 36))\r\n              // let sawTrap = new Saw(400, 415, createImage(saw, 36, 36))\r\n             // export let sawTrap = new Saw(560, 315, createImage(saw, 36, 36))\r\n   // export let sawTrap2 = new OneStep(400, 455, createImage(platformOneStep, 36, 36))\r\n             // export let jump = new JumpToggle(100, 355, createImage(platformOne, 36, 36))\r\n\r\n\r\nexport function init() {\r\n  player.velocity.y = 1; \r\n  keys.spaceToggleCounter = 1;\r\n  additionalElements = [new AdditionalElements(0, 0, createImage(backgroundImg, canvas.width, canvas.height))\r\n];\r\n\r\n//   platforms = [/* new Platform(210, 455, createImage(platformSolid, 36, 36)),\r\n//           new Platform(230, 419, createImage(platformSolid, 36, 36)),\r\n// //new Platform(25, 420, createImage(platformSolid, 36, 36)),\r\n// new Platform(65, 420, createImage(platformSolid, 36, 36)),\r\n//               new Platform(315, 455, createImage(platformSolid, 36, 36)),\r\n//               new Platform(170, 455, createImage(platformSolid, 36, 36)),\r\n//               new Platform(130, 419, createImage(platformSolid, 36, 36)),\r\n// //new PlatformTwo(10, 419, createImage(platformSolid, 36, 36)),             \r\n// new Platform(160, 280, createImage(platformSolid, 36, 36)),\r\n// new Platform(196, 316, createImage(platformSolid, 36, 36)),\r\n//               new Platform(370, 200, createImage(platformSolid, 36, 36)),\r\n//               new Platform(345, 244, createImage(platformSolid, 36, 36)),\r\n//               new Platform(310, 278, createImage(platformSolid, 36, 36)),\r\n// new Platform(230, 278, createImage(platformSolid, 36, 36)),\r\n//               //265 204\r\n// // new PlatformTwo(120, 245, createImage(platformSolid, 36, 36)),\r\n// // new PlatformTwo(125, 281, createImage(platformSolid, 36, 36)),\r\n// //           new PlatformTwo(266, 349, createImage(platformSolid, 36, 36)),\r\n// //           new PlatformTwo(266, 312, createImage(platformSolid, 36, 36)),\r\n// //          new PlatformTwo(266, 276, createImage(platformSolid, 36, 36)),\r\n// //          new PlatformTwo(266, 240, createImage(platformSolid, 36, 36)),\r\n// //          new PlatformTwo(266, 204, createImage(platformSolid, 36, 36)),\r\n// //           new PlatformTwo(266, 384, createImage(platformSolid, 36, 36)),\r\n//               new PlatformOne(570, 200, createImage(platformSolid, 36, 36)),\r\n//               new PlatformThree(670, 200, createImage(platformSolid, 36, 36)),\r\n//               new Platform(280, 455, createImage(platformSolid, 36, 36)),\r\n//               new Platform(436, 455, createImage(platformSolid, 36, 36)),\r\n\r\n// // Right wall\r\n//               new Platform(830, 312, createImage(platformSolid, 36, 36)),\r\n//               new Platform(830, 348, createImage(platformSolid, 36, 36)),\r\n//               new Platform(830, 384, createImage(platformSolid, 36, 36)),\r\n//               new Platform(830, 419, createImage(platformSolid, 36, 36)),\r\n//               new Platform(830, 455, createImage(platformSolid, 36, 36)),\r\n//     spikes, sawTrap, sawTrap2, jump   */    ]; // создаем платформы !!!!!!!!!!!!!\r\n\r\n\r\n\r\n\r\n\r\n    \r\n                                          player = new Player({\r\n                                            platforms\r\n                                          });\r\n}                      \r\n\r\n\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  //c.clearRect(0, 0, canvas.width, canvas.height);\r\n  c.fillStyle = ('white');\r\n  c.fillRect(0, 0, canvas.width, canvas.height);\r\n  console.log('animation counter');\r\n\r\n  additionalElements.forEach(element => element.draw());\r\n\r\n // !!!!!!!!!! переделать под обработку массива если у element есть element.type === 'jumpToggle'                      \r\n           \r\n                                        // jump.toggle()                    \r\n\r\n\r\n                          platforms.forEach(platform => platform.draw())\r\n                          platforms.forEach(platform => platform.update()); // рисуем платформы\r\n  player.update();\r\n\r\n\r\n  if (keys.right.pressed && (player.position.x + player.width) <= canvas.width) { // упор персонажа в правый край экрана\r\n    player.velocity.x = 2;\r\n  } else if (keys.left.pressed && player.position.x >= 0) { // упор персонажа в левый край экрана\r\n    player.velocity.x = -2;\r\n  } else {\r\n    player.velocity.x = 0;\r\n  }\r\n\r\n  \r\n  // platforms.forEach(platform => {\r\n  //   platform.collision();\r\n  //   // // Player - platform collision (player is above the platform)\r\n  //   // if (player.position.y + player.height <= platform.position.y &&\r\n  //   //     player.position.y + player.height + player.velocity.y >= platform.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n  //   //     // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n  //   //     player.position.x + player.width >= platform.position.x + player.width / 3 && // + player.width / 3 - поправка чтобы персонаж падал прямо с самого края платформы (без этого он еще выступал на ширину трети спрайта героя)\r\n  //   //     player.position.x <= platform.position.x + platform.width - player.width / 3) { \r\n  //   //       player.velocity.y = 0; // если касается земли\r\n  //   // }\r\n  //   // // Player - platform collision (player is under the platform)\r\n  //   // if (player.position.y <= platform.position.y + platform.height &&\r\n  //   //     player.position.y + player.height + player.velocity.y >= platform.position.y &&\r\n  //   //     player.position.x >= platform.position.x - player.width / 2 && // можно сделать 1.75\r\n  //   //     player.position.x + player.width <= platform.position.x + platform.width + player.width / 2) {\r\n  //   //       player.velocity.y = 1;/* player.currentSprite = player.sprites.idle.right */\r\n  //   // }\r\n  //   // // Player - platform collision (player is left from the platform and moves right)\r\n  //   // if (keys.right.pressed &&\r\n  //   //     player.position.y + player.height >= platform.position.y && \r\n  //   //     player.position.y <= platform.position.y + platform.height &&\r\n  //   //     player.position.x + player.width >= platform.position.x) {\r\n  //   //       player.velocity.x = 0;\r\n  //   //       console.log('hit!');\r\n  //   // } // Continue: Player - platform collision (player holds right and is right from the platform - so he cans move)\r\n  //   //   if (keys.right.pressed &&\r\n  //   //     player.position.y + player.height >= platform.position.y && \r\n  //   //     player.position.y <= platform.position.y + platform.height &&\r\n  //   //     player.position.x + player.width >= platform.position.x + platform.width) {\r\n  //   //       player.velocity.x = 2;\r\n  //   //       console.log('free!');\r\n  //   //   }\r\n  //   // // Player - platform collision (player is right from the platform and moves left)\r\n  //   // if (keys.left.pressed &&\r\n  //   //   player.position.y + player.height >= platform.position.y && \r\n  //   //   player.position.y <= platform.position.y + platform.height &&\r\n  //   //   player.position.x <= platform.position.x + platform.width) {\r\n  //   //     player.velocity.x = 0;\r\n  //   //     console.log('hit!');\r\n  //   // } // Continue: Player - platform collision (player holds left and is left from the platform - so he cans move)\r\n  //   //   if (keys.left.pressed &&\r\n  //   //     player.position.y + player.height >= platform.position.y && \r\n  //   //     player.position.y <= platform.position.y + platform.height &&\r\n  //   //     player.position.x + player.width <= platform.position.x) { // или \"-\" player.width ???\r\n  //   //       player.velocity.x = -2;\r\n  //   //       console.log('free!');\r\n  //   //   }\r\n  // })\r\n        \r\n        \r\nif (player.velocity.y >= player.jumpHeight - player.gravity && !keys.right.pressed && !keys.left.pressed && keys.lastPressed === 'right') { // 10 - когда персонаж на земле\r\n  player.currentSprite = player.sprites.idle.right;\r\n} else if (player.velocity.y >= player.jumpHeight - player.gravity && !keys.right.pressed && !keys.left.pressed && keys.lastPressed === 'left') { // 10 - когда персонаж на земле\r\n  player.currentSprite = player.sprites.idle.left;\r\n}\r\n\r\n\r\n    // Падение в пропасть (см. комментарии в player.update())\r\n      if (player.position.y > canvas.height) {\r\n// sawTrap.restore();\r\n                                                    //sawTrap2.restore(); // !!!!!!!!!!!!\r\nkeys.jumpToggleActive = !keys.jumpToggleActive;\r\n        init();\r\n        console.log('you lose')\r\n\r\n        // сюда вставить звук проигрыша\r\n      }\r\n\r\n\r\n}\r\ninit();\r\nanimate();\r\n\r\nwindow.addEventListener('keydown', keyDownHandler);\r\nwindow.addEventListener('keyup', keyUpHandler);\r\n\r\n\r\n\r\nwindow.addEventListener('click', (e) => {\r\n  console.log(e.clientX, e.clientY)\r\n  //  debugger\r\n})","import { canvas, c } from './Canvas';\r\n\r\nexport class AdditionalElements {\r\n  constructor (posX, posY, image) {\r\n    this.position = {\r\n      x: posX,\r\n      y: posY\r\n    }\r\n    this.image = image;\r\n    this.width = image.width;\r\n    this.height = image.height;   \r\n  }\r\n  draw() {\r\n    c.drawImage(this.image, this.position.x, this.position.y)\r\n    // c.fillStyle = ('green');\r\n    // c.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n}","const platformImgSrc300 = '../assets/img/Platforms/platform.png';\r\nconst heroIdleR = '../assets/img/Hero/Idle_right.png';\r\nconst heroIdleL = '../assets/img/Hero/Idle_left.png';\r\nconst heroRunR = '../assets/img/Hero/Run_right.png';\r\nconst heroRunL = '../assets/img/Hero/Run_left.png';\r\nconst heroJumpR = '../assets/img/Hero/Jump_right.png';\r\nconst heroJumpL = '../assets/img/Hero/Jump_left.png';\r\nconst heroFallR = '../assets/img/Hero/Fall_right.png';\r\nconst heroFallL = '../assets/img/Hero/Fall_left.png';\r\nconst heroDeath = '../assets/img/Hero/Player_death.png';\r\nconst backgroundImg = '../assets/img/Background_images/bg_2.jpg';\r\nconst platformSolid = '../assets/img/Platforms/Platform_solid.png';\r\nconst platformOneStep = '../assets/img/Platforms/Platform_oneStep.png';\r\nconst platformOneStepExplosion = '../assets/img/Platforms/Platform_oneStep_Explosion.png';\r\nconst platformJump = '../assets/img/Platforms/Platform_jump.png';\r\nconst platformJumpDisabled = '../assets/img/Platforms/Platform_jump_disabled.png';\r\nconst platformOne = '../assets/img/Platforms/Platform_one.png';\r\nconst platformTwo = '../assets/img/Platforms/Platform_two.png';\r\nconst platformThree = '../assets/img/Platforms/Platform_three.png';\r\nconst platformOneDisabled = '../assets/img/Platforms/Platform_one_disabled.png';\r\nconst platformTwoDisabled = '../assets/img/Platforms/Platform_two_disabled.png';\r\nconst platformThreeDisabled = '../assets/img/Platforms/Platform_three_disabled.png';\r\nconst saw = '../assets/img/Traps/Saw.png';\r\nconst fan = '../assets/img/Traps/Fan.png';\r\nconst spike = '../assets/img/Traps/Platform_spikes.png';\r\n\r\n\r\n// import platformImgSrc300 from '/assets/img/platform.png';\r\n// import heroIdleR from '/assets/img/Idle_right.png';\r\n// import heroIdleL from '/assets/img/Idle_left.png';\r\n// import heroRunR from '/assets/img/Run_right.png';\r\n// import heroRunL from '/assets/img/Run_left.png';\r\n// import heroJumpR from '/assets/img/Jump_right.png';\r\n// import heroJumpL from '/assets/img/Jump_left.png';\r\n// import heroFallR from '/assets/img/Fall_right.png';\r\n// import heroFallL from '/assets/img/Fall_left.png';\r\n// import backgroundImg from '/assets/img/bg_2.jpg';\r\n\r\nexport { platformImgSrc300,\r\n        heroIdleR,\r\n        heroIdleL,\r\n        heroRunR,\r\n        heroRunL,\r\n        heroJumpR,\r\n        heroJumpL,\r\n        heroFallR,\r\n        heroFallL,\r\n        heroDeath,\r\n        backgroundImg,\r\n        platformSolid,\r\n        platformOneStep,\r\n        platformOneStepExplosion,\r\n        platformJump,\r\n        platformJumpDisabled,\r\n        platformOne,\r\n        platformTwo,\r\n        platformThree,\r\n        platformOneDisabled,\r\n        platformTwoDisabled,\r\n        platformThreeDisabled,\r\n        saw,\r\n        fan,\r\n        spike,\r\n      }","const canvas = document.getElementById('canvas');\r\nconst c = canvas.getContext(\"2d\");\r\n\r\n\r\nexport { canvas, c }","import { collisionsLevel_1 } from './data/collisions';\r\nimport { canvas, c } from './Canvas';\r\nimport { Platform,\r\n  PlatformSpikes,\r\n  Saw,\r\n  OneStep,\r\n  Fan,\r\n  JumpToggle,\r\n  PlatformOne,\r\n  PlatformTwo,\r\n  PlatformThree,\r\n} from './Platform';\r\n\r\nimport { platformImgSrc300,\r\n  heroIdleR,\r\n  heroIdleL,\r\n  heroRunR,\r\n  heroRunL,\r\n  heroJumpR,\r\n  heroJumpL,\r\n  heroFallR,\r\n  heroFallL,\r\n  heroDeath,\r\n  backgroundImg,\r\n  platformSolid,\r\n  platformOneStep,\r\n  platformOneStepExplosion,\r\n  platformJump,\r\n  platformJumpDisabled,\r\n  platformOne,\r\n  platformTwo,\r\n  platformThree,\r\n  platformOneDisabled,\r\n  platformTwoDisabled,\r\n  platformThreeDisabled,\r\n  saw,\r\n  fan,\r\n  spike,\r\n} from './Assets';\r\nimport { createImage, Sprite } from './CreateImage';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CollisionBlock {\r\n  constructor ({ position }) {\r\n    this.position = position;\r\n    this.width = 36;\r\n    this.height = 36;\r\n  }\r\n  draw() {\r\n    c.fillStyle = 'rgba(204,11,10,0.3)';\r\n    c.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n}\r\n\r\nconst platforms = [];\r\n// const parsedCollisions = collisionsLevel_1.forEach((row, index_Y) => {\r\n//   row.forEach((cell, index_X) => {\r\n//     if (cell === 292) {\r\n//       console.log(index_X, index_Y)\r\n//       platforms.push(new CollisionBlock(\r\n//         {position: {\r\n//           x: index_X * 36,\r\n//           y: index_Y * 36,\r\n//         }}))\r\n//     }\r\n//   })\r\n// })\r\nconst parsedCollisions = collisionsLevel_1.forEach((row, index_Y) => {\r\n  row.forEach((cell, index_X) => {\r\n    if (cell === 292) {\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new PlatformOne(\r\n        index_X * 36, index_Y * 36, createImage(platformOne, 36, 36), platforms))\r\n    }\r\n    if (cell === 'ee') {\r\n      console.log(index_X, index_Y)\r\n      platforms.push(new Platform(\r\n        index_X * 36, index_Y * 36, createImage(platformSolid, 36, 36), platforms))\r\n    }\r\n  })\r\n})\r\n\r\n\r\nexport { CollisionBlock, platforms, parsedCollisions }","export function createImage(src, width, height) {\r\n  const image = new Image();\r\n  image.src = src;\r\n  image.width = width;\r\n  image.height = height;\r\n  return image;\r\n}\r\n\r\n\r\nexport class Sprite {\r\n  constructor ({ position, imageSrc }) {\r\n    this.position = position;\r\n    this.image = new Image();\r\n    this.image.onload = () => {\r\n      this.loaded = true;\r\n    }\r\n    this.image.src = imageSrc;\r\n    this.loaded = false;\r\n  }\r\n  draw() {\r\n    if (!this.loaded) return;\r\n    c.drawImage(this.image, this.position.x, this.position.y)\r\n  }\r\n}","import { player } from '../index';\r\nimport { platforms } from '../index';\r\nimport { sawTrap, sawTrap2 } from '../index';\r\nimport { jump } from '../index';\r\n\r\n\r\n\r\nconst keys = {\r\n  right: {\r\n    pressed: false\r\n  },\r\n  left: {\r\n    pressed: false\r\n  },\r\n  up: {\r\n    pressed: false\r\n  },\r\n  lastPressed: 'right',\r\n  jumpToggleActive: true,\r\n  spaceToggleCounter: 1, // Platform One type is active\r\n  deadSignalZone: false,\r\n};\r\n                                                // let hiddenPlatformsArr = []\r\nconst keyDownHandler = (e) => {\r\n  console.log(e.code)\r\n  if (e.repeat == false) {\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        if (player.velocity.y === 0) {\r\n          keys.jumpToggleActive ? keys.jumpToggleActive = false : keys.jumpToggleActive = true;\r\n        }\r\n        keys.up.pressed = true;\r\n        if (player.velocity.y === 0 && keys.lastPressed === 'right') { // player.velocity.y === 0 - только один прыжок при нескольких нажатиях на UP\r\n          player.velocity.y -= player.jumpHeight; // -20 is higher\r\n          player.currentSprite = player.sprites.jump.right;\r\n        } else if (player.velocity.y === 0 && keys.lastPressed === 'left') { // player.velocity.y === 0 - только один прыжок при нескольких нажатиях на UP\r\n          player.velocity.y -= player.jumpHeight; // -20 is higher\r\n          player.currentSprite = player.sprites.jump.left;\r\n        }\r\n        break;\r\n\r\n      case 'Space': {\r\n        !keys.deadSignalZone && keys.spaceToggleCounter++;\r\n        // arr = [...arr, ...platforms.splice(1,1)];\r\n        // console.log(arr)\r\n      }\r\n        break;\r\n\r\n      case 'ArrowRight': {\r\n        keys.right.pressed = true;\r\n        keys.lastPressed = 'right';\r\n        player.currentSprite = player.sprites.run.right;\r\n      }\r\n        break;\r\n      case 'ArrowLeft': {\r\n        keys.left.pressed = true;\r\n        keys.lastPressed = 'left';\r\n        player.currentSprite = player.sprites.run.left;\r\n      }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nconst keyUpHandler = (e) => {\r\n  if (e.repeat == false) {\r\n    switch (e.code) {\r\n      case 'ArrowUp': \r\n        // player.velocity.y = 0;\r\n        keys.up.pressed = false;\r\n        // keys.up.pressed = true;\r\n        if (player.velocity.y !== 0 && keys.lastPressed === 'right') {\r\n          player.currentSprite = player.sprites.fall.right;\r\n        } else if (player.velocity.y !== 0 && keys.lastPressed === 'left') {\r\n          player.currentSprite = player.sprites.fall.left;\r\n        }\r\n        break;\r\n      // case 'ArrowDown': player.velocity.y = 0\r\n      //   break;\r\n      case 'ArrowRight': {\r\n        keys.right.pressed = false;\r\n        player.currentSprite = player.sprites.idle.right;\r\n      }\r\n        break;\r\n      case 'ArrowLeft': {\r\n        keys.left.pressed = false;\r\n        player.currentSprite = player.sprites.idle.left;\r\n      }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { keys, keyDownHandler, keyUpHandler };","import { canvas, c } from './Canvas';\r\nimport { createImage } from './CreateImage';\r\nimport { platformImgSrc300,\r\n  heroIdleR,\r\n  heroIdleL,\r\n  heroRunR,\r\n  heroRunL,\r\n  heroJumpR,\r\n  heroJumpL,\r\n  heroFallR,\r\n  heroFallL,\r\n  heroDeath,\r\n  backgroundImg,\r\n  platformSolid,\r\n  platformOneStep,\r\n  platformOneStepExplosion,\r\n  platformJump,\r\n  platformJumpDisabled,\r\n  platformOne,\r\n  platformTwo,\r\n  platformThree,\r\n  platformOneDisabled,\r\n  platformTwoDisabled,\r\n  platformThreeDisabled,\r\n  saw,\r\n  fan,\r\n  spike,\r\n      } from './Assets';\r\nimport { keys } from './Keys';\r\nimport { player, platforms } from '../index';\r\nimport { intersection } from '../index';\r\n\r\n// class Platform {\r\n//   constructor (posX, posY, image) {\r\n//     this.position = {\r\n//       x: posX,\r\n//       y: posY\r\n//     }\r\n//     this.image = image;\r\n//     this.width = image.width;\r\n//     this.height = image.height;\r\n//     this.frames = 0;\r\n//     this.frequency = 28;\r\n//     this.sprites = {\r\n//       idle: this.image,\r\n//     }\r\n//     this.currentSprite = this.sprites.idle;\r\n//     this.type = 'solid';\r\n//   }\r\n\r\n\r\n\r\n//   /* ------------------ */\r\n//   get t() {\r\n//     return this.position.y;\r\n//   }\r\n//   get b() {\r\n//     return this.position.y + this.height;\r\n//   }\r\n//   get l() {\r\n//     return this.position.x;\r\n//   }\r\n//   get r() {\r\n//     return this.position.x + this.width;\r\n//   }\r\n\r\n\r\n//   set t(value) {\r\n//     this.position.y = value;\r\n//   }\r\n//   set b(value) {\r\n//     this.position.y = value - this.height;\r\n//   }\r\n//   set l(value) {\r\n//     this.position.x = value;\r\n//   }\r\n//   set r(value) {\r\n//     this.position.x = value - this.width;\r\n//   }\r\n\r\n// /* -------------------- */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   getType() {\r\n//     return this.type;\r\n//   }\r\n//   draw() {\r\n//     c.drawImage(this.currentSprite, 36 * this.frames, 0, 36, 36, this.position.x, this.position.y, this.width, this.height) // 48, 0, 48, 48 - player sprite crop (x, y, w, h) // 36 размер кадра в спрайте\r\n//   }\r\n//   update() {\r\n//     this.frames++;\r\n//     if (this.frames > this.frequency) this.frames = 0;\r\n//     this.draw();\r\n//   }\r\n//   collisionAbove() {\r\n//   // Player - platform collision (player is above the platform)\r\n//     if (player.position.y + player.height <= this.position.y &&\r\n//       player.position.y + player.height + player.velocity.y >= this.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n//       // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n//       player.position.x + player.width - player.width / 4 >= this.position.x  && // + player.width / 3 - поправка чтобы персонаж падал прямо с самого края платформы (без этого он еще выступал на ширину трети спрайта героя)\r\n//       player.position.x <= this.position.x + this.width - player.width / 4) { \r\n//         player.velocity.y = 0; // если касается земли\r\n//     }\r\n//   }\r\n//   collisionUnder() {\r\n//   // Player - platform collision (player is under the platform)\r\n//     if (player.position.y - player.velocity.y * 0.5 <= this.position.y + this.height &&\r\n//       player.position.y + player.height + player.velocity.y >= this.position.y &&\r\n//       player.position.x >= this.position.x - player.width / 1.25 && // можно сделать 1.75\r\n//       player.position.x + player.width <= this.position.x + this.width + player.width / 1.25) {\r\n//         player.velocity.y = 1;/* player.currentSprite = player.sprites.idle.right */\r\n//       }\r\n//   }\r\n//   collisionLeftSide() {\r\n//   // Player - platform collision (player is left from the platform and moves right)\r\n//     if (keys.right.pressed &&\r\n//       player.position.y + player.height >= this.position.y && \r\n//       player.position.y <= this.position.y + this.height &&\r\n//       player.position.x + player.width >= this.position.x) {\r\n//         player.velocity.x = 0;\r\n//         console.log('hit!');\r\n//     } // Continue: Player - platform collision (player holds right and is right from the platform - so he cans move)\r\n//     if (keys.right.pressed &&\r\n//       player.position.y + player.height >= this.position.y && \r\n//       player.position.y <= this.position.y + this.height &&\r\n//       player.position.x + player.width >= this.position.x + this.width) {\r\n//         player.velocity.x = 2;\r\n//         console.log('free!');\r\n//     }\r\n//   }\r\n//   collisionRightSide() {\r\n//   // Player - platform collision (player is right from the platform and moves left)\r\n//   if (keys.left.pressed &&\r\n//     player.position.y + player.height >= this.position.y && \r\n//     player.position.y <= this.position.y + this.height &&\r\n//     player.position.x <= this.position.x + this.width) {\r\n//       player.velocity.x = 0;\r\n//       console.log('hit!');\r\n//   } // Continue: Player - platform collision (player holds left and is left from the platform - so he cans move)\r\n//     if (keys.left.pressed &&\r\n//       player.position.y + player.height >= this.position.y && \r\n//       player.position.y <= this.position.y + this.height &&\r\n//       player.position.x /* + player.width */ <= this.position.x) { // или \"-\" player.width ???\r\n//         player.velocity.x = -2;\r\n//         console.log('free!');\r\n//     }\r\n//   }\r\n  \r\n//   collision() { // разбито на отдельные методы, для частичного наследования (если понадобится)\r\n//     // this.collisionAbove();\r\n//     // this.collisionUnder();\r\n//     // this.collisionLeftSide();\r\n//     // this.collisionRightSide(); \r\n//   }\r\n// }\r\n\r\n    class Platform {\r\n      constructor (posX, posY, image, platforms = []) {\r\n        this.platforms = platforms;\r\n        this.position = {\r\n          x: posX,\r\n          y: posY\r\n        }\r\n        this.image = image;\r\n        this.width = image.width;\r\n        this.height = image.height;\r\n        this.frames = 0;\r\n        this.frequency = 28;\r\n        this.sprites = {\r\n          idle: this.image,\r\n        }\r\n        this.currentSprite = this.sprites.idle;\r\n        this.type = 'solid';\r\n      }\r\n    \r\n    \r\n    \r\n      /* ------------------ */\r\n      get top() {\r\n        return this.position.y;\r\n      }\r\n      get bottom() {\r\n        return this.position.y + this.height;\r\n      }\r\n      get left() {\r\n        return this.position.x;\r\n      }\r\n      get right() {\r\n        return this.position.x + this.width;\r\n      }\r\n    \r\n    \r\n      set top(value) {\r\n        this.position.y = value;\r\n      }\r\n      set bottom(value) {\r\n        this.position.y = value;\r\n      }\r\n      set left(value) {\r\n        this.position.x = value;\r\n      }\r\n      set right(value) {\r\n        this.position.x = value;\r\n      }\r\n    \r\n    /* -------------------- */  \r\n    \r\n                                          getType() {\r\n                                            return this.type;\r\n                                          }\r\n      draw() {\r\n        c.drawImage(this.currentSprite, 36 * this.frames, 0, 36, 36, this.position.x, this.position.y, this.width, this.height) // 48, 0, 48, 48 - player sprite crop (x, y, w, h) // 36 размер кадра в спрайте\r\n      }\r\n      update() {\r\n        this.frames++;\r\n        if (this.frames > this.frequency) this.frames = 0;\r\n        this.draw();\r\n      }\r\n      collisionAbove() {\r\n      // Player - platform collision (player is above the platform)\r\n        if (player.position.y + player.height <= this.position.y &&\r\n          player.position.y + player.height + player.velocity.y >= this.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n          // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n          player.position.x + player.width - player.width / 4 >= this.position.x  && // + player.width / 3 - поправка чтобы персонаж падал прямо с самого края платформы (без этого он еще выступал на ширину трети спрайта героя)\r\n          player.position.x <= this.position.x + this.width - player.width / 4) { \r\n            player.velocity.y = 0; // если касается земли\r\n        }\r\n      }\r\n      collisionUnder() {\r\n      // Player - platform collision (player is under the platform)\r\n        if (player.position.y - player.velocity.y * 0.5 <= this.position.y + this.height &&\r\n          player.position.y + player.height + player.velocity.y >= this.position.y &&\r\n          player.position.x >= this.position.x - player.width / 1.25 && // можно сделать 1.75\r\n          player.position.x + player.width <= this.position.x + this.width + player.width / 1.25) {\r\n            player.velocity.y = 1;/* player.currentSprite = player.sprites.idle.right */\r\n          }\r\n      }\r\n      collisionLeftSide() {\r\n      // Player - platform collision (player is left from the platform and moves right)\r\n        if (keys.right.pressed &&\r\n          player.position.y + player.height >= this.position.y && \r\n          player.position.y <= this.position.y + this.height &&\r\n          player.position.x + player.width >= this.position.x) {\r\n            player.velocity.x = 0;\r\n            console.log('hit!');\r\n        } // Continue: Player - platform collision (player holds right and is right from the platform - so he cans move)\r\n        if (keys.right.pressed &&\r\n          player.position.y + player.height >= this.position.y && \r\n          player.position.y <= this.position.y + this.height &&\r\n          player.position.x + player.width >= this.position.x + this.width) {\r\n            player.velocity.x = 2;\r\n            console.log('free!');\r\n        }\r\n      }\r\n      collisionRightSide() {\r\n      // Player - platform collision (player is right from the platform and moves left)\r\n      if (keys.left.pressed &&\r\n        player.position.y + player.height >= this.position.y && \r\n        player.position.y <= this.position.y + this.height &&\r\n        player.position.x <= this.position.x + this.width) {\r\n          player.velocity.x = 0;\r\n          console.log('hit!');\r\n      } // Continue: Player - platform collision (player holds left and is left from the platform - so he cans move)\r\n        if (keys.left.pressed &&\r\n          player.position.y + player.height >= this.position.y && \r\n          player.position.y <= this.position.y + this.height &&\r\n          player.position.x /* + player.width */ <= this.position.x) { // или \"-\" player.width ???\r\n            player.velocity.x = -2;\r\n            console.log('free!');\r\n        }\r\n      }\r\n    \r\n    \r\n      checkCollisionsAxes_X() {\r\n        // X-axes collision\r\n        for (let i = 0; i < this.platforms.length; i++) {\r\n          const platform = this.platforms[i]\r\n          // If a collision exists\r\n          if (this.left <= platform.position.x + platform.width &&\r\n            this.right >= platform.position.x &&\r\n            this.top <= platform.position.y + platform.height &&\r\n            this.bottom >= platform.position.y) {\r\n              if (this.velocity.x < 0) {// moving left       // <= -2\r\n                this.left = platform.position.x + platform.width + 0.1;\r\n                break;\r\n              }\r\n              if (this.velocity.x > 0) {// moving right      // <= 2\r\n                this.left = platform.position.x - this.width - 0.1;\r\n                break;\r\n              }\r\n          }\r\n        }\r\n      }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      checkCollisionsAxes_Y() {\r\n        // Y-axes collision\r\n        for (let i = 0; i < this.platforms.length; i++) {\r\n          const platform = this.platforms[i]\r\n          // If a collision exists\r\n          if (this.left <= platform.position.x + platform.width &&\r\n            this.right >= platform.position.x &&\r\n            this.top <= platform.position.y + platform.height &&\r\n            this.bottom >= platform.position.y) {\r\n              if (this.velocity.y < 0) {// moving up  // -0.25\r\n                this.velocity.y = 0;\r\n                this.top = platform.position.y + platform.height + 0.1;\r\n                break;\r\n              }\r\n              if (this.velocity.y > 0) {// falling down  // 0.25\r\n                this.velocity.y = 0;\r\n                this.top = platform.position.y - this.height - 0.1;\r\n                break;\r\n              }\r\n          }\r\n        }\r\n      }\r\n    \r\n    \r\n      \r\n      collision() { // разбито на отдельные методы, для частичного наследования (если понадобится)\r\n        // this.collisionAbove();\r\n        // this.collisionUnder();\r\n        // this.collisionLeftSide();\r\n        // this.collisionRightSide(); \r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass PlatformSpikes extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'spikes';\r\n  }\r\n  collision() {\r\n  // Player - platform collision (player is above the spike platform)\r\n    if (player.position.y + player.height <= this.position.y &&\r\n      player.position.y + player.height + player.velocity.y >= this.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n      // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n      player.position.x + player.width >= this.position.x + player.width / 3 && // + player.width / 3 - поправка чтобы персонаж погибал касаясь самого края платформы (без этого он еще погибал не доходя трети ширины спрайта героя)\r\n      player.position.x <= this.position.x + this.width - player.width / 3) { \r\n      player.die();\r\n    }\r\n    // Player - platform collision (player is under the platform)\r\n    if (player.position.y <= this.position.y + this.height &&\r\n      player.position.y + player.height + player.velocity.y >= this.position.y &&\r\n      player.position.x >= this.position.x - player.width / 2 && // можно сделать 1.75\r\n      player.position.x + player.width <= this.position.x + this.width + player.width / 2) {\r\n        player.die();\r\n    }\r\n  }\r\n}\r\n\r\nclass Saw extends PlatformSpikes {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'saw';\r\n    this.frequency = 23;\r\n  }\r\n}\r\n\r\nclass Fan extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'fan';\r\n    this.sprites = {\r\n      idle: createImage(fan, 36, 36),\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.frequency = 23;\r\n  }\r\n}\r\n\r\nclass JumpToggle extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'jumpToggle';\r\n    this.sprites = {\r\n      idle: createImage(platformJump, 36, 36),\r\n      disabled: createImage(platformJumpDisabled, 36, 36),\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.frequency = 63;\r\n  }\r\n  toggle() {\r\n    keys.jumpToggleActive === true ? this.currentSprite = this.sprites.idle : this.currentSprite = this.sprites.disabled;\r\n  }\r\n  collision() {\r\n    if (keys.jumpToggleActive) {\r\n      super.collision();\r\n    }\r\n  }\r\n}\r\n\r\nclass OneStep extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.temporaryPosX = posX;\r\n    this.hits = 0;\r\n    this.sprites = {\r\n      idle: createImage(platformOneStep, 36, 36),\r\n      explosion: createImage(platformOneStepExplosion, 36, 36),\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.frequency = 28;\r\n    this.type = 'oneStep';\r\n  }\r\n  destroy() {\r\n    this.currentSprite = this.sprites.explosion;\r\n    setTimeout(() => {\r\n      this.position.x = -9999;\r\n      this.currentSprite = this.sprites.idle;\r\n  }, 550);\r\n    this.hits = 0;\r\n  } \r\n  restore() {\r\n    this.position.x = this.temporaryPosX;\r\n  }\r\n  collision() {\r\n  // Player - platform collision (player is above the platform)\r\n    // And moves right and leaves the platform\r\n    if ((!keys.up.pressed && player.velocity.y === 0 || !keys.up.pressed && player.velocity.y === player.gravity) &&\r\n        player.position.y + player.height <= this.position.y &&\r\n        player.position.y + player.height + player.velocity.y >= this.position.y &&\r\n        (player.position.x + player.width * 2 >= this.position.x &&\r\n        player.position.x <= this.position.x + this.width)) {\r\n          this.destroy(); \r\n    }\r\n  // Не нужен но надо оставить, иначе блок пропадает сразу же\r\n    if (keys.up.pressed && player.velocity.y != 0 &&\r\n    player.position.y + player.height <= this.position.y &&\r\n    player.position.y + player.height + player.velocity.y >= this.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n    // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n    player.position.x + player.width >= this.position.x + player.width / 3 && // + player.width / 3 - поправка чтобы персонаж падал прямо с самого края платформы (без этого он еще выступал на ширину трети спрайта героя)\r\n    player.position.x <= this.position.x + this.width - player.width / 3) { \r\n      player.velocity.y = 0; // если касается земли\r\n      this.destroy();\r\n    } else if (!keys.up.pressed &&\r\n      player.position.y + player.height <= this.position.y &&\r\n      player.position.y + player.height + player.velocity.y >= this.position.y && // без && player.position.y + player.height + player.velocity.y >= platform.position.y персонаж перестает двигаться когда над платформой\r\n      // Player - platform collision (player on the platform - inside of left and right platform boundaries)\r\n      player.position.x + player.width >= this.position.x + player.width / 3 && // + player.width / 3 - поправка чтобы персонаж падал прямо с самого края платформы (без этого он еще выступал на ширину трети спрайта героя)\r\n      player.position.x <= this.position.x + this.width - player.width / 3) { \r\n        player.velocity.y = 0; // если касается земли\r\n    }\r\n    // Player - platform collision (player is under the platform)\r\n    if (player.position.y <= this.position.y + this.height &&\r\n      player.position.y + player.height + player.velocity.y >= this.position.y &&\r\n      player.position.x >= this.position.x - player.width / 2 && // можно сделать 1.75\r\n      player.position.x + player.width <= this.position.x + this.width + player.width / 2) {\r\n        player.velocity.y = 1;\r\n        this.destroy();\r\n    }\r\n    // Player - platform collision (player is left from the platform)\r\n    if (keys.right.pressed &&\r\n      player.position.y + player.height >= this.position.y && \r\n      player.position.y <= this.position.y + this.height &&\r\n      player.position.x + player.width >= this.position.x &&\r\n      !(player.position.x >= this.position.x)) { // player is left from the platform and moves right\r\n        this.hits++;\r\n        keys.right.pressed = false;\r\n        player.currentSprite = player.sprites.fall.right;\r\n        player.velocity.x -= 15;\r\n        this.hits === 1 && this.destroy();\r\n    }\r\n    // Player - platform collision (player is right from the platform)\r\n    if (keys.left.pressed &&\r\n      player.position.y + player.height >= this.position.y && \r\n      player.position.y <= this.position.y + this.height &&\r\n      player.position.x <= this.position.x + this.width &&\r\n      !(player.position.x + player.width <= this.position.x)) { // player is right from the platform and moves left\r\n        this.hits++;\r\n        keys.left.pressed = false;\r\n        player.currentSprite = player.sprites.fall.left;\r\n        player.velocity.x += 15;\r\n        this.hits === 1 && this.destroy();\r\n    }\r\n  }\r\n}\r\n\r\nclass SpaceToggledPlatform extends Platform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'toggledBySpacePlatform';\r\n    this.sprites = {\r\n      idle: createImage(platformOne, 36, 36),\r\n      disabled: createImage(platformOneDisabled, 36, 36),\r\n    }\r\n    this.currentSprite = this.sprites.idle;\r\n    this.frequency = 63;\r\n    this.setCount = 1;\r\n  }\r\n  checkSpaceToggleCounter() {\r\n   keys.spaceToggleCounter >= 4 ? keys.spaceToggleCounter =  1 : keys.spaceToggleCounter; \r\n  }\r\n  collision() {\r\n    if (keys.spaceToggleCounter === this.setCount) {\r\n      this.currentSprite = this.sprites.idle;\r\n      super.collision();\r\n      this.checkSpaceToggleCounter();\r\n    } else {\r\n      this.currentSprite = this.sprites.disabled;\r\n      this.checkSpaceToggleCounter();\r\n    // Hero is inside or outside of Platform (for toggled by space platformes and deadSignal zone platforms)\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Переделать platforms    \r\n    if (platforms.some((elem) => {\r\n      return (player.position.y + player.height * 0.75 >= elem.position.y &&\r\n        player.position.y + player.height * 0.35 <= elem.position.y + elem.height &&\r\n        player.position.x + player.width * 0.75 >= elem.position.x &&\r\n        player.position.x + player.width * 0.25 <= elem.position.x + elem.width);\r\n    })) {\r\n      keys.deadSignalZone = true;\r\n      //debugger\r\n      console.log('inside')\r\n    } else {\r\n      console.log('outside')   \r\n      keys.deadSignalZone = false;\r\n    }\r\n    }\r\n  } \r\n}\r\n\r\nclass PlatformOne extends SpaceToggledPlatform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'platformOne';\r\n    this.setCount = 1;\r\n    this.sprites = {\r\n      idle: createImage(platformOne, 36, 36),\r\n      disabled: createImage(platformOneDisabled, 36, 36),\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nclass PlatformTwo extends SpaceToggledPlatform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'platformTwo';\r\n    this.setCount = 2;\r\n    this.sprites = {\r\n      idle: createImage(platformTwo, 36, 36),\r\n      disabled: createImage(platformTwoDisabled, 36, 36),\r\n    }\r\n  }\r\n}\r\n\r\nclass PlatformThree extends SpaceToggledPlatform {\r\n  constructor(posX, posY, image) {\r\n    super(posX, posY, image);\r\n    this.type = 'platformThree';\r\n    this.setCount = 3;\r\n    this.sprites = {\r\n      idle: createImage(platformThree, 36, 36),\r\n      disabled: createImage(platformThreeDisabled, 36, 36),\r\n    }\r\n  }\r\n}\r\n\r\nexport { Platform,\r\n        PlatformSpikes,\r\n        Saw,\r\n        OneStep,\r\n        Fan,\r\n        JumpToggle,\r\n        PlatformOne,\r\n        PlatformTwo,\r\n        PlatformThree,\r\n      }","import { canvas, c } from './Canvas';\r\nimport { createImage } from './CreateImage';\r\nimport { init } from '../index';\r\nimport { platformImgSrc300,\r\n  heroIdleR,\r\n  heroIdleL,\r\n  heroRunR,\r\n  heroRunL,\r\n  heroJumpR,\r\n  heroJumpL,\r\n  heroFallR,\r\n  heroFallL,\r\n  heroDeath,\r\n  backgroundImg,\r\n  platformSolid,\r\n  platformOneStep,\r\n  platformOneStepExplosion,\r\n  platformJump,\r\n  platformJumpDisabled,\r\n  platformOne,\r\n  platformTwo,\r\n  platformThree,\r\n  platformOneDisabled,\r\n  platformTwoDisabled,\r\n  platformThreeDisabled,\r\n  saw,\r\n  fan,\r\n  spike,\r\n      } from '../js/Assets';\r\nimport { platforms, intersection } from '../index';\r\n\r\n\r\nexport class Player {\r\n  constructor({ platforms = [] }) {\r\n    this.platforms = platforms;\r\n    this.position = {\r\n      x: 165,\r\n      y: 247 //canvas.height / 2\r\n    }\r\n    this.velocity = {\r\n      x: 0,\r\n      y: 1 \r\n    }\r\n    this.gravity = 0.25;\r\n    this.jumpHeight = 10; // -20 is higher\r\n    this.width = 32;\r\n    this.height = 32;\r\n    this.frequency = 21;\r\n    this.frames = 0;\r\n    this.sprites = {\r\n      idle: {\r\n        right: createImage(heroIdleR, 32, 32),\r\n        left: createImage(heroIdleL, 32, 32),\r\n      },\r\n      run: {\r\n        right: createImage(heroRunR, 32, 32),\r\n        left: createImage(heroRunL, 32, 32),\r\n      },\r\n      jump: {\r\n        right: createImage(heroJumpR, 32, 32),\r\n        left: createImage(heroJumpL, 32, 32),\r\n      },\r\n      fall: {\r\n        right: createImage(heroFallR, 32, 32),\r\n        left: createImage(heroFallL, 32, 32),\r\n      },\r\n      death: createImage(heroDeath, 32, 32),\r\n    }\r\n    this.currentSprite = this.sprites.idle.right;\r\n  }\r\n            \r\n  get top() {\r\n    return this.position.y;\r\n  }\r\n  get bottom() {\r\n    return this.position.y + this.height;\r\n  }\r\n  get left() {\r\n    return this.position.x;\r\n  }\r\n  get right() {\r\n    return this.position.x + this.width;\r\n  }\r\n\r\n\r\n  set top(value) {\r\n    this.position.y = value;\r\n  }\r\n  set bottom(value) {\r\n    this.position.y = value;\r\n  }\r\n  set left(value) {\r\n    this.position.x = value;\r\n  }\r\n  set right(value) {\r\n    this.position.x = value;\r\n  }\r\n\r\n  draw() {\r\n    c.drawImage(this.currentSprite, 32 * this.frames, 0, 32, 32, this.left, this.top, this.width, this.height) // 32, 0, 32, 32 - player sprite crop (x, y, w, h)\r\n  }\r\n\r\n  die() {\r\n    this.velocity.x = 0;\r\n    this.velocity.y = 0;\r\n    this.currentSprite = this.sprites.death;\r\n    setTimeout(init, 550);\r\n  }\r\n\r\n  checkCollisionsAxes_X() {\r\n    // X-axes collision\r\n    for (let i = 0; i < this.platforms.length; i++) {\r\n      const platform = this.platforms[i]\r\n      // If a collision exists\r\n      if (this.left <= platform.position.x + platform.width &&\r\n        this.right >= platform.position.x &&\r\n        this.top <= platform.position.y + platform.height &&\r\n        this.bottom >= platform.position.y) {\r\n          if (this.velocity.x < 0) {// moving left       // <= -2\r\n            this.left = platform.position.x + platform.width + 0.1;\r\n            break;\r\n          }\r\n          if (this.velocity.x > 0) {// moving right      // <= 2\r\n            this.left = platform.position.x - this.width - 0.1;\r\n            break;\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCollisionsAxes_Y() {\r\n    // Y-axes collision\r\n    for (let i = 0; i < this.platforms.length; i++) {\r\n      const platform = this.platforms[i]\r\n      // If a collision exists\r\n      if (this.left <= platform.position.x + platform.width &&\r\n        this.right >= platform.position.x &&\r\n        this.top <= platform.position.y + platform.height &&\r\n        this.bottom >= platform.position.y) {\r\n          if (this.velocity.y < 0) {// moving up  // -0.25\r\n            this.velocity.y = 0;\r\n            this.top = platform.position.y + platform.height + 0.1;\r\n            break;\r\n          }\r\n          if (this.velocity.y > 0) {// falling down  // 0.25\r\n            this.velocity.y = 0;\r\n            this.top = platform.position.y - this.height - 0.1;\r\n            break;\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  setGravity() {\r\n    this.velocity.y += this.gravity;\r\n    this.top += this.velocity.y;\r\n  }\r\n\r\n  update() {\r\n    this.frames++;\r\n    if (this.frames > this.frequency) this.frames = 0;\r\n    this.draw();\r\n    this.left += this.velocity.x;\r\n    this.checkCollisionsAxes_X(); // strict order\r\n    this.setGravity();            // strict order\r\n    this.checkCollisionsAxes_Y(); // strict order\r\n  }\r\n}","// Platforms:\r\n    // sl - platform Solid\r\n    // 1p - platform One\r\n    // 2p - platform Two\r\n    // 3p - platform Three\r\n    // jp - platform Jump-Toggle\r\n    // 1s - platform One-Step\r\n// Traps:\r\n    // sw - Saw trap\r\n    // st - Spikes trap\r\n    // ft - Flamethrower\r\n    // dz - Dead signal zone\r\n// Decorations:\r\n    // 1f - Frame block 1\r\n    // 2f - Frame block 2\r\n// Empty:\r\n    // ee - Empty block\r\n\r\nexport const collisionsLevel_1 = [\r\n  ['ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee'],\r\n  ['ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee'],\r\n  ['ee', 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', '', '', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', 'e', '', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', '', '', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 292, 'ee', 'ee', 292, 'ee', 'ee', 292, 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 292, 'ee'],\r\n  ['ee', 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 'ee', 292, 'ee'],\r\n  ['ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee'],\r\n  ['ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee', 'ee']\r\n];","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./src/index.js\");\nvar __webpack_exports__ = __webpack_require__(\"./src/sass/styles.scss\");\n",""],"names":["canvas","c","createImage","Sprite","Player","Platform","PlatformSpikes","Saw","OneStep","Fan","JumpToggle","PlatformOne","PlatformTwo","PlatformThree","platformImgSrc300","heroIdleR","heroIdleL","heroRunR","heroRunL","heroJumpR","heroJumpL","heroFallR","heroFallL","heroDeath","backgroundImg","platformSolid","platformOneStep","platformOneStepExplosion","platformJump","platformJumpDisabled","platformOne","platformTwo","platformThree","platformOneDisabled","platformTwoDisabled","platformThreeDisabled","saw","fan","spike","keys","keyDownHandler","keyUpHandler","AdditionalElements","width","height","additionalElements","collisionsLevel_1","CollisionBlock","platforms","parsedCollisions","console","log","player","init","velocity","y","spaceToggleCounter","animate","requestAnimationFrame","fillStyle","fillRect","forEach","element","draw","platform","update","right","pressed","position","x","left","jumpHeight","gravity","lastPressed","currentSprite","sprites","idle","jumpToggleActive","window","addEventListener","e","clientX","clientY","constructor","posX","posY","image","drawImage","document","getElementById","getContext","_ref","row","index_Y","cell","index_X","push","src","Image","imageSrc","onload","loaded","sawTrap","sawTrap2","jump","up","deadSignalZone","code","repeat","run","fall","intersection","arguments","length","undefined","frames","frequency","type","top","bottom","value","getType","collisionAbove","collisionUnder","collisionLeftSide","collisionRightSide","checkCollisionsAxes_X","i","checkCollisionsAxes_Y","collision","die","disabled","toggle","temporaryPosX","hits","explosion","destroy","setTimeout","restore","SpaceToggledPlatform","setCount","checkSpaceToggleCounter","some","elem","death","setGravity"],"sourceRoot":""}